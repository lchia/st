=>main.cpp: read config file
config:
  quietMode          = 0
  debugMode          = 1
  sequenceBasePath   = sequences
  sequenceName       = girl
  resultsPath        = log.txt
  trainingLogPath    = trainingLog.txt
  frameWidth         = 400
  frameHeight        = 400
  seed               = 0
  searchRadius       = 200
  svmC               = 100
  svmBudgetSize      = 100
  feature 0
    feature: haar
    kernel:  gaussian
    params:  0.2

=>main.cpp: parse frames file 
dataset: girl
startFrame: 0
endFrame:   501
imgFormat:  sequences/girl/imgs/img%05d.png

=>main.cpp: read first frame to get size
firstFrame: sequences/girl/imgs/img00000.png
imgRows: 240
imgCols: 320
scaleW:   1.25
scaleH:  1.66667

=>main.cpp: read init box from ground truth file
ground truth file name: girl_gt.txt
gtLine: 128,46,104,127
initBB:  [origin: (160, 76.6667) size: (130, 211.667)]

------------------------------
@^_^@ LaRank::LaRank construct function .
------------------------------

=>frameLoop: first frame

=>main.cpp: start frame loop
>>frameLoop: 0-th 
  frame name: sequences/girl/imgs/img00000.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
  @Tracker::Initialise
   m_bb: [origin: (160, 76) size: (130, 211)]
   ImageRep: image(frame, m_needsIntegralImage, m_needsIntegralHist)
  @UpdateLearner(image)
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (160, 76) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (160, 76) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x24abd80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=1
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(0)
++    ProcessNew(0)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [0, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 7
      The number of sps: m_sps.size()=1
==============================================
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (83, -40) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (56, -3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (30, 34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (3, 71) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-24, 108) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.77526
	>bestInd: 19402
	>m_bb: [origin: (160, 71) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (160, 71) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (160, 71) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x24abd10
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=2
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(1)
++    ProcessNew(1)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [1, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=2
==============================================

=>main.cpp: start frame loop
>>frameLoop: 1-th 
  frame name: sequences/girl/imgs/img00001.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (83, -35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (57, 2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (30, 39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (3, 76) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-24, 113) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.782831
	>bestInd: 19132
	>m_bb: [origin: (161, 70) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (161, 70) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (161, 70) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2533fc0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=3
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(2)
++    ProcessNew(2)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [2, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=3
==============================================

=>main.cpp: start frame loop
>>frameLoop: 2-th 
  frame name: sequences/girl/imgs/img00002.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51489
          sample.GetRects().size() = 51489
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (82, -34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (56, 3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (29, 40) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (2, 77) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-25, 114) size: (130, 211)]
	  >results.size() = 51489
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.792788
	>bestInd: 18862
	>m_bb: [origin: (162, 69) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (162, 69) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (162, 69) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x1a78640
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=4
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(3)
++    ProcessNew(3)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [3, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=4
==============================================

=>main.cpp: start frame loop
>>frameLoop: 3-th 
  frame name: sequences/girl/imgs/img00003.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51485
          sample.GetRects().size() = 51485
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (81, -33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (55, 4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (28, 41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (1, 78) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-26, 115) size: (130, 211)]
	  >results.size() = 51485
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.792412
	>bestInd: 18862
	>m_bb: [origin: (163, 69) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (163, 69) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (163, 69) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2543e20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=5
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(4)
++    ProcessNew(4)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [4, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=4
==============================================

=>main.cpp: start frame loop
>>frameLoop: 4-th 
  frame name: sequences/girl/imgs/img00004.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51480
          sample.GetRects().size() = 51480
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (80, -33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (54, 4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (27, 41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (0, 78) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-27, 115) size: (130, 211)]
	  >results.size() = 51480
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.780831
	>bestInd: 18867
	>m_bb: [origin: (168, 69) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (168, 69) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (168, 69) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2553b70
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=5
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(4)
++    ProcessNew(4)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [4, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=3
==============================================

=>main.cpp: start frame loop
>>frameLoop: 5-th 
  frame name: sequences/girl/imgs/img00005.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51436
          sample.GetRects().size() = 51436
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (75, -33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (49, 4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (22, 41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-5, 78) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-13, 115) size: (130, 211)]
	  >results.size() = 51436
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.736699
	>bestInd: 17248
	>m_bb: [origin: (174, 63) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (174, 63) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (174, 63) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x1a78790
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=4
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(3)
++    ProcessNew(3)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [3, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 4
      The number of sps: m_sps.size()=2
==============================================

=>main.cpp: start frame loop
>>frameLoop: 6-th 
  frame name: sequences/girl/imgs/img00006.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51227
          sample.GetRects().size() = 51227
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (69, -27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (43, 10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (16, 47) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-11, 84) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-118, 122) size: (130, 211)]
	  >results.size() = 51227
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.687647
	>bestInd: 14818
	>m_bb: [origin: (183, 54) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (183, 54) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (183, 54) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2543f80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=3
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(2)
++    ProcessNew(2)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [2, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 4
      The number of sps: m_sps.size()=3
==============================================

=>main.cpp: start frame loop
>>frameLoop: 7-th 
  frame name: sequences/girl/imgs/img00007.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50598
          sample.GetRects().size() = 50598
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (60, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (34, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (7, 56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (24, 93) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-39, 133) size: (130, 211)]
	  >results.size() = 50598
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.663415
	>bestInd: 12656
	>m_bb: [origin: (189, 46) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (189, 46) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (189, 46) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2533fa0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=4
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(3)
++    ProcessNew(3)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [3, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 5
      The number of sps: m_sps.size()=3
==============================================

=>main.cpp: start frame loop
>>frameLoop: 8-th 
  frame name: sequences/girl/imgs/img00008.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 49845
          sample.GetRects().size() = 49845
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (54, -10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (28, 27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (1, 64) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (13, 102) size: (130, 211)]
	  >results.size() = 49845
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.724532
	>bestInd: 12395
	>m_bb: [origin: (199, 45) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (199, 45) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 14
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (199, 45) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 14
      sp = 0x1a6c670
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=4
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(3)
++    ProcessNew(3)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [3, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=4
==============================================

=>main.cpp: start frame loop
>>frameLoop: 9-th 
  frame name: sequences/girl/imgs/img00009.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 48734
          sample.GetRects().size() = 48734
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-166, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-181, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (1, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-54, 106) size: (130, 211)]
	  >results.size() = 48734
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.690542
	>bestInd: 12884
	>m_bb: [origin: (208, 47) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (208, 47) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 13
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (208, 47) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 13
      sp = 0x254fd70
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=5
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(4)
++    ProcessNew(4)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [4, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 4
      The number of sps: m_sps.size()=5
==============================================

=>main.cpp: start frame loop
>>frameLoop: 10-th 
  frame name: sequences/girl/imgs/img00010.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 47136
          sample.GetRects().size() = 47136
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-85, -9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-30, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-17, 68) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-132, 110) size: (130, 211)]
	  >results.size() = 47136
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.712737
	>bestInd: 12715
	>m_bb: [origin: (218, 48) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (218, 48) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 13
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (218, 48) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 13
      sp = 0x2544e70
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=6
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(5)
++    ProcessNew(5)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [5, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 4
      The number of sps: m_sps.size()=6
==============================================

=>main.cpp: start frame loop
>>frameLoop: 11-th 
  frame name: sequences/girl/imgs/img00011.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 45290
          sample.GetRects().size() = 45290
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (48, -9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-17, 31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-72, 72) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-112, 116) size: (130, 211)]
	  >results.size() = 45290
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.704603
	>bestInd: 12982
	>m_bb: [origin: (224, 51) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (224, 51) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 13
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (224, 51) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 13
      sp = 0x2541d50
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=7
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(6)
++    ProcessNew(6)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [6, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=7
==============================================

=>main.cpp: start frame loop
>>frameLoop: 12-th 
  frame name: sequences/girl/imgs/img00012.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 44303
          sample.GetRects().size() = 44303
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-192, -10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-19, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-72, 72) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-57, 117) size: (130, 211)]
	  >results.size() = 44303
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.57945
	>bestInd: 13393
	>m_bb: [origin: (227, 54) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (227, 54) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 12
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (227, 54) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 12
      sp = 0x1a6b330
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=8
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(7)
++    ProcessNew(7)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [7, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 4
      The number of sps: m_sps.size()=4
==============================================

=>main.cpp: start frame loop
>>frameLoop: 13-th 
  frame name: sequences/girl/imgs/img00013.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 43875
          sample.GetRects().size() = 43875
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-49, -13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-3, 28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-182, 71) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-56, 116) size: (130, 211)]
	  >results.size() = 43875
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.590497
	>bestInd: 14177
	>m_bb: [origin: (224, 58) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (224, 58) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 12
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (224, 58) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 12
      sp = 0x254fce0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=5
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(4)
++    ProcessNew(4)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [4, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=4
==============================================

=>main.cpp: start frame loop
>>frameLoop: 14-th 
  frame name: sequences/girl/imgs/img00014.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 44617
          sample.GetRects().size() = 44617
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-142, -17) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (22, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-105, 65) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-39, 109) size: (130, 211)]
	  >results.size() = 44617
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.656706
	>bestInd: 15295
	>m_bb: [origin: (211, 62) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (211, 62) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 13
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (211, 62) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 13
      sp = 0x2544e20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=5
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(4)
++    ProcessNew(4)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [4, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=5
==============================================

=>main.cpp: start frame loop
>>frameLoop: 15-th 
  frame name: sequences/girl/imgs/img00015.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 47241
          sample.GetRects().size() = 47241
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-125, -23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (36, 15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (49, 54) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (25, 95) size: (130, 211)]
	  >results.size() = 47241
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.820044
	>bestInd: 15802
	>m_bb: [origin: (193, 61) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (193, 61) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 14
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (193, 61) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 14
      sp = 0x25364c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=6
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(5)
++    ProcessNew(5)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [4, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=5
==============================================

=>main.cpp: start frame loop
>>frameLoop: 16-th 
  frame name: sequences/girl/imgs/img00016.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50193
          sample.GetRects().size() = 50193
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (66, -25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (40, 12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (13, 49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-59, 87) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-115, 128) size: (130, 211)]
	  >results.size() = 50193
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.848151
	>bestInd: 15875
	>m_bb: [origin: (172, 58) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (172, 58) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (172, 58) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2553b80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=6
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(5)
++    ProcessNew(5)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [4, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=5
==============================================

=>main.cpp: start frame loop
>>frameLoop: 17-th 
  frame name: sequences/girl/imgs/img00017.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51182
          sample.GetRects().size() = 51182
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (71, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (45, 15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (18, 52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-9, 89) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-80, 127) size: (130, 211)]
	  >results.size() = 51182
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.924342
	>bestInd: 15600
	>m_bb: [origin: (152, 57) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (152, 57) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (152, 57) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2543710
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=6
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(5)
++    ProcessNew(5)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [4, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=5
==============================================

=>main.cpp: start frame loop
>>frameLoop: 18-th 
  frame name: sequences/girl/imgs/img00018.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51486
          sample.GetRects().size() = 51486
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (91, -21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (65, 16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (38, 53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (11, 90) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-16, 127) size: (130, 211)]
	  >results.size() = 51486
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.962661
	>bestInd: 14775
	>m_bb: [origin: (140, 54) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (140, 54) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (140, 54) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x254f260
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=6
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(5)
++    ProcessNew(5)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [4, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=5
==============================================

=>main.cpp: start frame loop
>>frameLoop: 19-th 
  frame name: sequences/girl/imgs/img00019.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (103, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (77, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (50, 56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (23, 93) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-4, 130) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.997586
	>bestInd: 13946
	>m_bb: [origin: (124, 51) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (124, 51) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (124, 51) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x254f280
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=6
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(5)
++    ProcessNew(5)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [4, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=5
==============================================

=>main.cpp: start frame loop
>>frameLoop: 20-th 
  frame name: sequences/girl/imgs/img00020.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51487
          sample.GetRects().size() = 51487
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (119, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (93, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (66, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (39, 96) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (12, 133) size: (130, 211)]
	  >results.size() = 51487
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.03407
	>bestInd: 14196
	>m_bb: [origin: (104, 52) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (104, 52) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (104, 52) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x254a860
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=6
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(5)
++    ProcessNew(5)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [4, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=5
==============================================

=>main.cpp: start frame loop
>>frameLoop: 21-th 
  frame name: sequences/girl/imgs/img00021.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51223
          sample.GetRects().size() = 51223
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (139, -16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (113, 21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (86, 58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (59, 95) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-67, 133) size: (130, 211)]
	  >results.size() = 51223
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.01699
	>bestInd: 16350
	>m_bb: [origin: (90, 60) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (90, 60) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (90, 60) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x1a66590
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=6
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(5)
++    ProcessNew(5)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [4, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=5
==============================================

=>main.cpp: start frame loop
>>frameLoop: 22-th 
  frame name: sequences/girl/imgs/img00022.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50940
          sample.GetRects().size() = 50940
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (153, -24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (127, 13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (100, 50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (73, 87) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-52, 126) size: (130, 211)]
	  >results.size() = 50940
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.06982
	>bestInd: 17141
	>m_bb: [origin: (68, 63) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (68, 63) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (68, 63) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x1a66600
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=6
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(5)
++    ProcessNew(5)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [5, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=6
==============================================

=>main.cpp: start frame loop
>>frameLoop: 23-th 
  frame name: sequences/girl/imgs/img00023.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 48986
          sample.GetRects().size() = 48986
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (197, -26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (20, 12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (180, 49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-60, 89) size: (130, 211)]
	  >results.size() = 48986
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.10192
	>bestInd: 16481
	>m_bb: [origin: (53, 62) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (53, 62) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 13
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (53, 62) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 13
      sp = 0x2a35130
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=7
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(6)
++    ProcessNew(6)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [5, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=6
==============================================

=>main.cpp: start frame loop
>>frameLoop: 24-th 
  frame name: sequences/girl/imgs/img00024.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 46101
          sample.GetRects().size() = 46101
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (2, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (138, 17) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (146, 57) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-52, 100) size: (130, 211)]
	  >results.size() = 46101
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.11546
	>bestInd: 15300
	>m_bb: [origin: (45, 61) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (45, 61) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 12
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (45, 61) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 12
      sp = 0x2a2e610
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=7
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(6)
++    ProcessNew(6)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [5, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=6
==============================================

=>main.cpp: start frame loop
>>frameLoop: 25-th 
  frame name: sequences/girl/imgs/img00025.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 44544
          sample.GetRects().size() = 44544
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (78, -20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (35, 21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (159, 62) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-31, 107) size: (130, 211)]
	  >results.size() = 44544
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.08612
	>bestInd: 15300
	>m_bb: [origin: (34, 63) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (34, 63) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 14
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (34, 63) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 14
      sp = 0x1a2f4d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=7
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(6)
++    ProcessNew(6)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [6, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=6
==============================================

=>main.cpp: start frame loop
>>frameLoop: 26-th 
  frame name: sequences/girl/imgs/img00026.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 42526
          sample.GetRects().size() = 42526
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (91, -20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (33, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (177, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-32, 114) size: (130, 211)]
	  >results.size() = 42526
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.11795
	>bestInd: 15522
	>m_bb: [origin: (32, 67) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (32, 67) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (32, 67) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x1a78640
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=7
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(6)
++    ProcessNew(6)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [5, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=6
==============================================

=>main.cpp: start frame loop
>>frameLoop: 27-th 
  frame name: sequences/girl/imgs/img00027.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 42276
          sample.GetRects().size() = 42276
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-14, -23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (14, 20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-5, 64) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (33, 111) size: (130, 211)]
	  >results.size() = 42276
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.05077
	>bestInd: 15583
	>m_bb: [origin: (37, 68) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (37, 68) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 13
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (37, 68) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 13
      sp = 0x1a32b40
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=7
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(6)
++    ProcessNew(6)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [5, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=6
==============================================

=>main.cpp: start frame loop
>>frameLoop: 28-th 
  frame name: sequences/girl/imgs/img00028.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 43256
          sample.GetRects().size() = 43256
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (7, -25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (59, 17) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (20, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (149, 105) size: (130, 211)]
	  >results.size() = 43256
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.04261
	>bestInd: 14968
	>m_bb: [origin: (41, 64) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (41, 64) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 12
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (41, 64) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 12
      sp = 0x24abdf0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=7
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(6)
++    ProcessNew(6)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [5, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=6
==============================================

=>main.cpp: start frame loop
>>frameLoop: 29-th 
  frame name: sequences/girl/imgs/img00029.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 43890
          sample.GetRects().size() = 43890
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (32, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (154, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-39, 62) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (162, 106) size: (130, 211)]
	  >results.size() = 43890
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.982012
	>bestInd: 15265
	>m_bb: [origin: (39, 64) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (39, 64) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 12
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (39, 64) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 12
      sp = 0x2534be0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=7
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(6)
++    ProcessNew(6)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [5, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=6
==============================================

=>main.cpp: start frame loop
>>frameLoop: 30-th 
  frame name: sequences/girl/imgs/img00030.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 43510
          sample.GetRects().size() = 43510
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (118, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (83, 20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-15, 63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (87, 108) size: (130, 211)]
	  >results.size() = 43510
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.954787
	>bestInd: 15374
	>m_bb: [origin: (37, 65) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (37, 65) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 12
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (37, 65) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 12
      sp = 0x1a68f60
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=7
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(6)
++    ProcessNew(6)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [5, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=6
==============================================

=>main.cpp: start frame loop
>>frameLoop: 31-th 
  frame name: sequences/girl/imgs/img00031.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 43163
          sample.GetRects().size() = 43163
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-23, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (26, 20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (14, 63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (0, 109) size: (130, 211)]
	  >results.size() = 43163
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.875616
	>bestInd: 15942
	>m_bb: [origin: (34, 68) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (34, 68) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (34, 68) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x1a6c5c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=7
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(6)
++    ProcessNew(6)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [6, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=7
==============================================

=>main.cpp: start frame loop
>>frameLoop: 32-th 
  frame name: sequences/girl/imgs/img00032.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 42686
          sample.GetRects().size() = 42686
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (139, -25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (83, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (182, 61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (59, 108) size: (130, 211)]
	  >results.size() = 42686
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.856241
	>bestInd: 16403
	>m_bb: [origin: (30, 71) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (30, 71) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (30, 71) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x254f280
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=8
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(7)
++    ProcessNew(7)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [7, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=8
==============================================

=>main.cpp: start frame loop
>>frameLoop: 33-th 
  frame name: sequences/girl/imgs/img00033.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 42007
          sample.GetRects().size() = 42007
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (120, -27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (8, 17) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (49, 61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (114, 108) size: (130, 211)]
	  >results.size() = 42007
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.923094
	>bestInd: 17463
	>m_bb: [origin: (31, 77) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (31, 77) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 14
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (31, 77) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 14
      sp = 0x1a78790
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=9
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(8)
++    ProcessNew(8)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [7, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=8
==============================================

=>main.cpp: start frame loop
>>frameLoop: 34-th 
  frame name: sequences/girl/imgs/img00034.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 42330
          sample.GetRects().size() = 42330
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (148, -33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (3, 11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (177, 54) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (48, 101) size: (130, 211)]
	  >results.size() = 42330
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.830777
	>bestInd: 17924
	>m_bb: [origin: (37, 79) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (37, 79) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 14
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (37, 79) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 14
      sp = 0x25596a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=9
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(8)
++    ProcessNew(8)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [7, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=8
==============================================

=>main.cpp: start frame loop
>>frameLoop: 35-th 
  frame name: sequences/girl/imgs/img00035.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 43506
          sample.GetRects().size() = 43506
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (138, -36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-26, 7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (96, 49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (17, 94) size: (130, 211)]
	  >results.size() = 43506
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.780601
	>bestInd: 18848
	>m_bb: [origin: (44, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (44, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 14
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (44, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 14
      sp = 0x2544f70
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=9
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(8)
++    ProcessNew(8)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [7, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=8
==============================================

=>main.cpp: start frame loop
>>frameLoop: 36-th 
  frame name: sequences/girl/imgs/img00036.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 44867
          sample.GetRects().size() = 44867
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (98, -39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (130, 2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (174, 43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (132, 86) size: (130, 211)]
	  >results.size() = 44867
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.818669
	>bestInd: 20362
	>m_bb: [origin: (48, 85) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (48, 85) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (48, 85) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x1a6aad0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=9
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(8)
++    ProcessNew(8)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [7, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=8
==============================================

=>main.cpp: start frame loop
>>frameLoop: 37-th 
  frame name: sequences/girl/imgs/img00037.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 45677
          sample.GetRects().size() = 45677
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-19, -43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (113, -3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-25, 38) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (155, 79) size: (130, 211)]
	  >results.size() = 45677
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.879634
	>bestInd: 21128
	>m_bb: [origin: (49, 87) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (49, 87) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (49, 87) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x1a6b4a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=9
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(8)
++    ProcessNew(8)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [7, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=8
==============================================

=>main.cpp: start frame loop
>>frameLoop: 38-th 
  frame name: sequences/girl/imgs/img00038.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 45886
          sample.GetRects().size() = 45886
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-33, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (68, -5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (129, 35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-2, 77) size: (130, 211)]
	  >results.size() = 45886
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.859069
	>bestInd: 20935
	>m_bb: [origin: (56, 86) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (56, 86) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (56, 86) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x1a6b4a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=9
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(8)
++    ProcessNew(8)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [7, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=8
==============================================

=>main.cpp: start frame loop
>>frameLoop: 39-th 
  frame name: sequences/girl/imgs/img00039.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 47207
          sample.GetRects().size() = 47207
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (154, -46) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-20, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (13, 33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (48, 73) size: (130, 211)]
	  >results.size() = 47207
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.922869
	>bestInd: 22591
	>m_bb: [origin: (67, 90) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (67, 90) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (67, 90) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x1a6b4c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=9
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(8)
++    ProcessNew(8)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [7, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=8
==============================================

=>main.cpp: start frame loop
>>frameLoop: 40-th 
  frame name: sequences/girl/imgs/img00040.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 49325
          sample.GetRects().size() = 49325
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (22, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-30, -13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (95, 24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (115, 62) size: (130, 211)]
	  >results.size() = 49325
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.01968
	>bestInd: 24314
	>m_bb: [origin: (79, 93) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (79, 93) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (79, 93) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2a59ef0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=9
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(8)
++    ProcessNew(8)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [7, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=8
==============================================

=>main.cpp: start frame loop
>>frameLoop: 41-th 
  frame name: sequences/girl/imgs/img00041.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50967
          sample.GetRects().size() = 50967
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (131, -56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (104, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (78, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (51, 55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-23, 93) size: (130, 211)]
	  >results.size() = 50967
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.04802
	>bestInd: 26951
	>m_bb: [origin: (89, 100) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (89, 100) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (89, 100) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2548a90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=9
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(8)
++    ProcessNew(8)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [7, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=8
==============================================

=>main.cpp: start frame loop
>>frameLoop: 42-th 
  frame name: sequences/girl/imgs/img00042.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51417
          sample.GetRects().size() = 51417
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-50, -63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-77, -26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (168, 10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (141, 47) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (114, 84) size: (130, 211)]
	  >results.size() = 51417
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.05201
	>bestInd: 29031
	>m_bb: [origin: (101, 107) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (101, 107) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (101, 107) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2537b90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=9
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(8)
++    ProcessNew(8)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [7, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=8
==============================================

=>main.cpp: start frame loop
>>frameLoop: 43-th 
  frame name: sequences/girl/imgs/img00043.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51489
          sample.GetRects().size() = 51489
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (143, -71) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (116, -34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (90, 3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (63, 40) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (36, 77) size: (130, 211)]
	  >results.size() = 51489
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.01262
	>bestInd: 30459
	>m_bb: [origin: (108, 112) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (108, 112) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (108, 112) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x2542540
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=9
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(8)
++    ProcessNew(8)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [8, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=9
==============================================

=>main.cpp: start frame loop
>>frameLoop: 44-th 
  frame name: sequences/girl/imgs/img00044.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (135, -76) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (108, -39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (81, -2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (55, 35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (28, 72) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.05238
	>bestInd: 32360
	>m_bb: [origin: (111, 119) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (111, 119) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (111, 119) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x2534b90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=10
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(9)
++    ProcessNew(9)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [9, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=9
==============================================

=>main.cpp: start frame loop
>>frameLoop: 45-th 
  frame name: sequences/girl/imgs/img00045.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (132, -83) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (105, -46) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (78, -9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (52, 28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (25, 65) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.03858
	>bestInd: 33174
	>m_bb: [origin: (112, 122) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (112, 122) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (112, 122) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x2542540
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=10
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(9)
++    ProcessNew(9)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [8, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=9
==============================================

=>main.cpp: start frame loop
>>frameLoop: 46-th 
  frame name: sequences/girl/imgs/img00046.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (131, -86) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (104, -49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (77, -12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (51, 25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (24, 62) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.982409
	>bestInd: 35073
	>m_bb: [origin: (114, 129) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (114, 129) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (114, 129) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x24abd10
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=10
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(9)
++    ProcessNew(9)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [8, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=9
==============================================

=>main.cpp: start frame loop
>>frameLoop: 47-th 
  frame name: sequences/girl/imgs/img00047.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51480
          sample.GetRects().size() = 51480
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (139, -93) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (112, -56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (85, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (59, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (32, 55) size: (130, 211)]
	  >results.size() = 51480
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.89512
	>bestInd: 33984
	>m_bb: [origin: (118, 125) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (118, 125) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (118, 125) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x24abdf0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=10
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(9)
++    ProcessNew(9)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [9, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=9
==============================================

=>main.cpp: start frame loop
>>frameLoop: 48-th 
  frame name: sequences/girl/imgs/img00048.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (125, -89) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (98, -52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (71, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (45, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (18, 59) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.863074
	>bestInd: 33184
	>m_bb: [origin: (121, 122) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (121, 122) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (121, 122) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x1a32b40
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=10
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(9)
++    ProcessNew(9)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [9, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=9
==============================================

=>main.cpp: start frame loop
>>frameLoop: 49-th 
  frame name: sequences/girl/imgs/img00049.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (122, -86) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (95, -49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (68, -12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (42, 25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (15, 62) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.955276
	>bestInd: 29392
	>m_bb: [origin: (123, 108) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (123, 108) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (123, 108) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2541830
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=10
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(9)
++    ProcessNew(9)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [8, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=9
==============================================

=>main.cpp: start frame loop
>>frameLoop: 50-th 
  frame name: sequences/girl/imgs/img00050.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (120, -72) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (93, -35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (67, 2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (40, 39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (13, 76) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.03788
	>bestInd: 23974
	>m_bb: [origin: (125, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (125, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (125, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x1a770c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=10
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(9)
++    ProcessNew(9)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [8, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=9
==============================================

=>main.cpp: start frame loop
>>frameLoop: 51-th 
  frame name: sequences/girl/imgs/img00051.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (118, -52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (91, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (65, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (38, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (11, 96) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.04147
	>bestInd: 18019
	>m_bb: [origin: (132, 66) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (132, 66) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (132, 66) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2544ad0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=10
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(9)
++    ProcessNew(9)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [8, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=9
==============================================

=>main.cpp: start frame loop
>>frameLoop: 52-th 
  frame name: sequences/girl/imgs/img00052.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (111, -30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (85, 7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (58, 44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (31, 81) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (4, 118) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.06737
	>bestInd: 15853
	>m_bb: [origin: (134, 58) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (134, 58) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (134, 58) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2544ad0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=10
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(9)
++    ProcessNew(9)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [8, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=9
==============================================

=>main.cpp: start frame loop
>>frameLoop: 53-th 
  frame name: sequences/girl/imgs/img00053.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (109, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (83, 15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (56, 52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (29, 89) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (2, 126) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.07384
	>bestInd: 13419
	>m_bb: [origin: (139, 49) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (139, 49) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (139, 49) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x254a8c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=10
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(9)
++    ProcessNew(9)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [9, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=10
==============================================

=>main.cpp: start frame loop
>>frameLoop: 54-th 
  frame name: sequences/girl/imgs/img00054.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (104, -13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (78, 24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (51, 61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (24, 98) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-3, 135) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.10015
	>bestInd: 11797
	>m_bb: [origin: (143, 43) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (143, 43) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 13
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (143, 43) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 13
      sp = 0x1a75760
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=11
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(10)
++    ProcessNew(10)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [10, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=10
==============================================

=>main.cpp: start frame loop
>>frameLoop: 55-th 
  frame name: sequences/girl/imgs/img00055.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51462
          sample.GetRects().size() = 51462
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (100, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (74, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (47, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (20, 104) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-4, 141) size: (130, 211)]
	  >results.size() = 51462
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.02724
	>bestInd: 11261
	>m_bb: [origin: (149, 41) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (149, 41) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (149, 41) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x1a62f80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=11
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(10)
++    ProcessNew(10)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [10, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=10
==============================================

=>main.cpp: start frame loop
>>frameLoop: 56-th 
  frame name: sequences/girl/imgs/img00056.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51370
          sample.GetRects().size() = 51370
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (94, -5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (68, 32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (41, 69) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (14, 106) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (42, 143) size: (130, 211)]
	  >results.size() = 51370
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.959897
	>bestInd: 13976
	>m_bb: [origin: (155, 51) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (155, 51) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (155, 51) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x1a75240
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=11
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(10)
++    ProcessNew(10)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [10, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=11
==============================================

=>main.cpp: start frame loop
>>frameLoop: 57-th 
  frame name: sequences/girl/imgs/img00057.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51420
          sample.GetRects().size() = 51420
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (88, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (62, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (35, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (8, 96) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (6, 133) size: (130, 211)]
	  >results.size() = 51420
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.907537
	>bestInd: 18587
	>m_bb: [origin: (159, 68) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (159, 68) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (159, 68) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x2553ac0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=12
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(11)
++    ProcessNew(11)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [11, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=12
==============================================

=>main.cpp: start frame loop
>>frameLoop: 58-th 
  frame name: sequences/girl/imgs/img00058.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (84, -32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (58, 5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (31, 42) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (4, 79) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-23, 116) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.878886
	>bestInd: 22928
	>m_bb: [origin: (164, 84) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (164, 84) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (164, 84) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x299e9d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=13
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(12)
++    ProcessNew(12)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [12, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=12
==============================================

=>main.cpp: start frame loop
>>frameLoop: 59-th 
  frame name: sequences/girl/imgs/img00059.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (79, -48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (52, -11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (26, 26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-1, 63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-28, 100) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.841443
	>bestInd: 23745
	>m_bb: [origin: (168, 87) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (168, 87) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (168, 87) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2544f40
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=13
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(12)
++    ProcessNew(12)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [12, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=12
==============================================

=>main.cpp: start frame loop
>>frameLoop: 60-th 
  frame name: sequences/girl/imgs/img00060.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (75, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (48, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (22, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-5, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-32, 97) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.838542
	>bestInd: 23751
	>m_bb: [origin: (174, 87) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (174, 87) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (174, 87) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2a3c220
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=13
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(12)
++    ProcessNew(12)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [12, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=13
==============================================

=>main.cpp: start frame loop
>>frameLoop: 61-th 
  frame name: sequences/girl/imgs/img00061.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51484
          sample.GetRects().size() = 51484
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (69, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (42, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (16, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-11, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-38, 97) size: (130, 211)]
	  >results.size() = 51484
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.82861
	>bestInd: 24029
	>m_bb: [origin: (181, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (181, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (181, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x29a03f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=14
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(13)
++    ProcessNew(13)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [13, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=13
==============================================

=>main.cpp: start frame loop
>>frameLoop: 62-th 
  frame name: sequences/girl/imgs/img00062.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51410
          sample.GetRects().size() = 51410
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (66, -52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (39, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (13, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-14, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-4, 96) size: (130, 211)]
	  >results.size() = 51410
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.882984
	>bestInd: 23762
	>m_bb: [origin: (188, 87) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (188, 87) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (188, 87) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2b0ad80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=14
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(13)
++    ProcessNew(13)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [13, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=14
==============================================

=>main.cpp: start frame loop
>>frameLoop: 63-th 
  frame name: sequences/girl/imgs/img00063.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51132
          sample.GetRects().size() = 51132
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-131, -50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-158, -13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-184, 24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (60, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-27, 98) size: (130, 211)]
	  >results.size() = 51132
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.843981
	>bestInd: 23954
	>m_bb: [origin: (191, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (191, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (191, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x1a6a9c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=15
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(14)
++    ProcessNew(14)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [14, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=13
==============================================

=>main.cpp: start frame loop
>>frameLoop: 64-th 
  frame name: sequences/girl/imgs/img00064.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50944
          sample.GetRects().size() = 50944
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-47, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-74, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-100, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-126, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-106, 98) size: (130, 211)]
	  >results.size() = 50944
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.945059
	>bestInd: 23058
	>m_bb: [origin: (194, 85) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (194, 85) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (194, 85) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x2b05050
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=14
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(13)
++    ProcessNew(13)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [12, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=13
==============================================

=>main.cpp: start frame loop
>>frameLoop: 65-th 
  frame name: sequences/girl/imgs/img00065.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50663
          sample.GetRects().size() = 50663
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (15, -48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-12, -11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-38, 26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-27, 63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-91, 102) size: (130, 211)]
	  >results.size() = 50663
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.933094
	>bestInd: 23266
	>m_bb: [origin: (197, 86) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (197, 86) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (197, 86) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x2b05050
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=14
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(13)
++    ProcessNew(13)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [13, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=14
==============================================

=>main.cpp: start frame loop
>>frameLoop: 66-th 
  frame name: sequences/girl/imgs/img00066.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50340
          sample.GetRects().size() = 50340
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-128, -48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-131, -11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-157, 26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-74, 63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-21, 102) size: (130, 211)]
	  >results.size() = 50340
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.947557
	>bestInd: 23652
	>m_bb: [origin: (196, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (196, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (196, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x1a6b4c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=15
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(14)
++    ProcessNew(14)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [14, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=15
==============================================

=>main.cpp: start frame loop
>>frameLoop: 67-th 
  frame name: sequences/girl/imgs/img00067.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50477
          sample.GetRects().size() = 50477
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-138, -50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-149, -13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-175, 24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-134, 61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-155, 100) size: (130, 211)]
	  >results.size() = 50477
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.97024
	>bestInd: 22852
	>m_bb: [origin: (189, 85) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (189, 85) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (189, 85) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2543e20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=16
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(15)
++    ProcessNew(15)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [15, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=16
==============================================

=>main.cpp: start frame loop
>>frameLoop: 68-th 
  frame name: sequences/girl/imgs/img00068.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51054
          sample.GetRects().size() = 51054
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-128, -48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-155, -11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-181, 26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (63, 62) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (41, 100) size: (130, 211)]
	  >results.size() = 51054
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.933731
	>bestInd: 23938
	>m_bb: [origin: (179, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (179, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (179, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x24abec0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=17
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(16)
++    ProcessNew(16)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [16, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 4
      The number of sps: m_sps.size()=15
==============================================

=>main.cpp: start frame loop
>>frameLoop: 69-th 
  frame name: sequences/girl/imgs/img00069.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51444
          sample.GetRects().size() = 51444
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (64, -52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (37, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (11, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-16, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-26, 96) size: (130, 211)]
	  >results.size() = 51444
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.999427
	>bestInd: 25099
	>m_bb: [origin: (167, 92) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (167, 92) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (167, 92) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2545b70
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=16
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(15)
++    ProcessNew(15)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [15, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=15
==============================================

=>main.cpp: start frame loop
>>frameLoop: 70-th 
  frame name: sequences/girl/imgs/img00070.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (76, -56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (49, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (23, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-4, 55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-31, 92) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.06408
	>bestInd: 25634
	>m_bb: [origin: (160, 94) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (160, 94) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (160, 94) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x253cae0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=16
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(15)
++    ProcessNew(15)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [15, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=15
==============================================

=>main.cpp: start frame loop
>>frameLoop: 71-th 
  frame name: sequences/girl/imgs/img00071.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (83, -58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (56, -21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (30, 16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (3, 53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-24, 90) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.07768
	>bestInd: 26446
	>m_bb: [origin: (159, 97) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (159, 97) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (159, 97) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x24abdf0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=16
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(15)
++    ProcessNew(15)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [14, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=14
==============================================

=>main.cpp: start frame loop
>>frameLoop: 72-th 
  frame name: sequences/girl/imgs/img00072.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (84, -61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (57, -24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (31, 13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (4, 50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-23, 87) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.05109
	>bestInd: 26448
	>m_bb: [origin: (161, 97) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (161, 97) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (161, 97) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x24abdf0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=15
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(14)
++    ProcessNew(14)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [14, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=13
==============================================

=>main.cpp: start frame loop
>>frameLoop: 73-th 
  frame name: sequences/girl/imgs/img00073.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (82, -61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (55, -24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (29, 13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (2, 50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-25, 87) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.10464
	>bestInd: 26721
	>m_bb: [origin: (163, 98) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (163, 98) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (163, 98) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x1a17300
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=14
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(13)
++    ProcessNew(13)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [13, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=14
==============================================

=>main.cpp: start frame loop
>>frameLoop: 74-th 
  frame name: sequences/girl/imgs/img00074.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (80, -62) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (53, -25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (27, 12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (0, 49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-27, 86) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.08715
	>bestInd: 26995
	>m_bb: [origin: (166, 99) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (166, 99) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (166, 99) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2544ad0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=15
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(14)
++    ProcessNew(14)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [14, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=14
==============================================

=>main.cpp: start frame loop
>>frameLoop: 75-th 
  frame name: sequences/girl/imgs/img00075.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (77, -63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (50, -26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (24, 11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-3, 48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-30, 85) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.1312
	>bestInd: 26998
	>m_bb: [origin: (169, 99) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (169, 99) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (169, 99) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x1a6b2b0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=15
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(14)
++    ProcessNew(14)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [14, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=15
==============================================

=>main.cpp: start frame loop
>>frameLoop: 76-th 
  frame name: sequences/girl/imgs/img00076.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (74, -63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (47, -26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (21, 11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-6, 48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-33, 85) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.11
	>bestInd: 26730
	>m_bb: [origin: (171, 98) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (171, 98) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (171, 98) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x1a62f80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=16
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(15)
++    ProcessNew(15)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [15, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=16
==============================================

=>main.cpp: start frame loop
>>frameLoop: 77-th 
  frame name: sequences/girl/imgs/img00077.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (72, -62) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (45, -25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (19, 12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-8, 49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-35, 86) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.13585
	>bestInd: 26459
	>m_bb: [origin: (171, 97) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (171, 97) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (171, 97) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2b0ad30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=17
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(16)
++    ProcessNew(16)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [16, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=16
==============================================

=>main.cpp: start frame loop
>>frameLoop: 78-th 
  frame name: sequences/girl/imgs/img00078.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (72, -61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (45, -24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (19, 13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-8, 50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-35, 87) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.1227
	>bestInd: 26728
	>m_bb: [origin: (170, 98) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (170, 98) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (170, 98) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x1a6c5c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=17
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(16)
++    ProcessNew(16)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [16, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=17
==============================================

=>main.cpp: start frame loop
>>frameLoop: 79-th 
  frame name: sequences/girl/imgs/img00079.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (73, -62) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (46, -25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (20, 12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-7, 49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-34, 86) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.08926
	>bestInd: 25914
	>m_bb: [origin: (168, 95) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (168, 95) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (168, 95) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x299ea20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=18
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(17)
++    ProcessNew(17)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [17, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=15
==============================================

=>main.cpp: start frame loop
>>frameLoop: 80-th 
  frame name: sequences/girl/imgs/img00080.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (75, -59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (48, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (22, 15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-5, 52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-32, 89) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.03822
	>bestInd: 25640
	>m_bb: [origin: (165, 94) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (165, 94) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (165, 94) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x299c010
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=16
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(15)
++    ProcessNew(15)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [15, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=16
==============================================

=>main.cpp: start frame loop
>>frameLoop: 81-th 
  frame name: sequences/girl/imgs/img00081.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (78, -58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (51, -21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (25, 16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-2, 53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-29, 90) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.00498
	>bestInd: 25636
	>m_bb: [origin: (161, 94) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (161, 94) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (161, 94) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2559650
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=17
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(16)
++    ProcessNew(16)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [16, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=17
==============================================

=>main.cpp: start frame loop
>>frameLoop: 82-th 
  frame name: sequences/girl/imgs/img00082.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (82, -58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (55, -21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (29, 16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (2, 53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-25, 90) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.983522
	>bestInd: 25357
	>m_bb: [origin: (153, 93) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (153, 93) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (153, 93) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a5a130
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=18
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(17)
++    ProcessNew(17)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [17, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=17
==============================================

=>main.cpp: start frame loop
>>frameLoop: 83-th 
  frame name: sequences/girl/imgs/img00083.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (90, -57) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (63, -20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (37, 17) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (10, 54) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-17, 91) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.914029
	>bestInd: 25352
	>m_bb: [origin: (148, 93) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (148, 93) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (148, 93) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a4dfd0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=18
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(17)
++    ProcessNew(17)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [17, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=17
==============================================

=>main.cpp: start frame loop
>>frameLoop: 84-th 
  frame name: sequences/girl/imgs/img00084.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (95, -57) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (68, -20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (42, 17) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (15, 54) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-12, 91) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.814223
	>bestInd: 25348
	>m_bb: [origin: (144, 93) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (144, 93) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (144, 93) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a5a130
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=18
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(17)
++    ProcessNew(17)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [17, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=18
==============================================

=>main.cpp: start frame loop
>>frameLoop: 85-th 
  frame name: sequences/girl/imgs/img00085.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (99, -57) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (72, -20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (46, 17) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (19, 54) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-8, 91) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.789749
	>bestInd: 25071
	>m_bb: [origin: (138, 92) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (138, 92) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (138, 92) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x292e320
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=19
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(18)
++    ProcessNew(18)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [18, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=19
==============================================

=>main.cpp: start frame loop
>>frameLoop: 86-th 
  frame name: sequences/girl/imgs/img00086.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (105, -56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (78, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (52, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (25, 55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-2, 92) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.837121
	>bestInd: 25063
	>m_bb: [origin: (130, 92) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (130, 92) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (130, 92) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2537b20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(19)
++    ProcessNew(19)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [18, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=19
==============================================

=>main.cpp: start frame loop
>>frameLoop: 87-th 
  frame name: sequences/girl/imgs/img00087.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (113, -56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (86, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (60, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (33, 55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (6, 92) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.835384
	>bestInd: 24790
	>m_bb: [origin: (128, 91) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (128, 91) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (128, 91) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2537b40
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(19)
++    ProcessNew(19)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [18, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=19
==============================================

=>main.cpp: start frame loop
>>frameLoop: 88-th 
  frame name: sequences/girl/imgs/img00088.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (115, -55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (88, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (62, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (35, 56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (8, 93) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.848019
	>bestInd: 24516
	>m_bb: [origin: (125, 90) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (125, 90) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (125, 90) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a50840
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(19)
++    ProcessNew(19)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [18, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=19
==============================================

=>main.cpp: start frame loop
>>frameLoop: 89-th 
  frame name: sequences/girl/imgs/img00089.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (118, -54) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (91, -17) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (65, 20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (38, 57) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (11, 94) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.875378
	>bestInd: 23967
	>m_bb: [origin: (118, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (118, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (118, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a4da10
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(19)
++    ProcessNew(19)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [18, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=19
==============================================

=>main.cpp: start frame loop
>>frameLoop: 90-th 
  frame name: sequences/girl/imgs/img00090.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (125, -52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (98, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (72, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (45, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (18, 96) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.893311
	>bestInd: 23693
	>m_bb: [origin: (115, 87) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (115, 87) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (115, 87) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x1a5d710
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(19)
++    ProcessNew(19)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [18, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=19
==============================================

=>main.cpp: start frame loop
>>frameLoop: 91-th 
  frame name: sequences/girl/imgs/img00091.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (128, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (101, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (75, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (48, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (21, 97) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.880917
	>bestInd: 22877
	>m_bb: [origin: (112, 84) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (112, 84) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (112, 84) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2543e20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(19)
++    ProcessNew(19)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 92-th 
  frame name: sequences/girl/imgs/img00092.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (131, -48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (104, -11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (78, 26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (51, 63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (24, 100) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.942236
	>bestInd: 21793
	>m_bb: [origin: (112, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (112, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (112, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x24abec0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 93-th 
  frame name: sequences/girl/imgs/img00093.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (131, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (104, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (78, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (51, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (24, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.957577
	>bestInd: 21522
	>m_bb: [origin: (112, 79) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (112, 79) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (112, 79) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a4da10
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 94-th 
  frame name: sequences/girl/imgs/img00094.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (131, -43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (104, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (78, 31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (51, 68) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (24, 105) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.985179
	>bestInd: 22608
	>m_bb: [origin: (115, 83) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (115, 83) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (115, 83) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2545b70
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 95-th 
  frame name: sequences/girl/imgs/img00095.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (128, -47) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (101, -10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (75, 27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (48, 64) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (21, 101) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.973063
	>bestInd: 23426
	>m_bb: [origin: (120, 86) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (120, 86) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (120, 86) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a3d140
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 96-th 
  frame name: sequences/girl/imgs/img00096.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (123, -50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (96, -13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (70, 24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (43, 61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (16, 98) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.986885
	>bestInd: 22886
	>m_bb: [origin: (121, 84) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (121, 84) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (121, 84) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x1a78640
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 97-th 
  frame name: sequences/girl/imgs/img00097.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (122, -48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (95, -11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (69, 26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (42, 63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (15, 100) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.958254
	>bestInd: 21802
	>m_bb: [origin: (121, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (121, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (121, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x254a8c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 98-th 
  frame name: sequences/girl/imgs/img00098.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (122, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (95, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (69, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (42, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (15, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.944171
	>bestInd: 20718
	>m_bb: [origin: (121, 76) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (121, 76) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (121, 76) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2543f80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 99-th 
  frame name: sequences/girl/imgs/img00099.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (122, -40) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (95, -3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (69, 34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (42, 71) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (15, 108) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.960451
	>bestInd: 20715
	>m_bb: [origin: (118, 76) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (118, 76) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (118, 76) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x1a68f60
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 100-th 
  frame name: sequences/girl/imgs/img00100.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (125, -40) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (98, -3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (72, 34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (45, 71) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (18, 108) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.955231
	>bestInd: 21256
	>m_bb: [origin: (118, 78) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (118, 78) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (118, 78) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2543f80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 101-th 
  frame name: sequences/girl/imgs/img00101.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (125, -42) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (98, -5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (72, 32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (45, 69) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (18, 106) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.962594
	>bestInd: 21807
	>m_bb: [origin: (127, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (127, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (127, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x299bf80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 102-th 
  frame name: sequences/girl/imgs/img00102.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (116, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (89, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (63, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (36, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (9, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.993235
	>bestInd: 21814
	>m_bb: [origin: (134, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (134, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (134, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x1a6c5c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 103-th 
  frame name: sequences/girl/imgs/img00103.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (109, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (82, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (56, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (29, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (2, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.978072
	>bestInd: 21823
	>m_bb: [origin: (143, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (143, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (143, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x1a6c610
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 104-th 
  frame name: sequences/girl/imgs/img00104.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (100, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (73, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (47, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (20, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-7, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.952179
	>bestInd: 21829
	>m_bb: [origin: (149, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (149, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (149, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2b02340
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 105-th 
  frame name: sequences/girl/imgs/img00105.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (94, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (67, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (41, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (14, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-13, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.991269
	>bestInd: 22107
	>m_bb: [origin: (156, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (156, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (156, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x25436b0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 106-th 
  frame name: sequences/girl/imgs/img00106.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (87, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (60, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (34, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (7, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-20, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.03209
	>bestInd: 21576
	>m_bb: [origin: (166, 79) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (166, 79) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (166, 79) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x1a6b4e0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 107-th 
  frame name: sequences/girl/imgs/img00107.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (77, -43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (50, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (24, 31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-3, 68) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-30, 105) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.04464
	>bestInd: 21317
	>m_bb: [origin: (178, 78) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (178, 78) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (178, 78) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x2543660
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 108-th 
  frame name: sequences/girl/imgs/img00108.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51364
          sample.GetRects().size() = 51364
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (65, -42) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (38, -5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (12, 32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-15, 69) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (30, 106) size: (130, 211)]
	  >results.size() = 51364
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.04063
	>bestInd: 22679
	>m_bb: [origin: (186, 83) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (186, 83) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (186, 83) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x254f6a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 109-th 
  frame name: sequences/girl/imgs/img00109.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51192
          sample.GetRects().size() = 51192
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (84, -47) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (57, -10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (31, 27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (4, 64) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-87, 102) size: (130, 211)]
	  >results.size() = 51192
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.03303
	>bestInd: 24811
	>m_bb: [origin: (177, 91) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (177, 91) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (177, 91) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2543700
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 110-th 
  frame name: sequences/girl/imgs/img00110.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51479
          sample.GetRects().size() = 51479
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (66, -55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (39, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (13, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-14, 56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-41, 93) size: (130, 211)]
	  >results.size() = 51479
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.96579
	>bestInd: 25644
	>m_bb: [origin: (170, 94) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (170, 94) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (170, 94) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2a3d140
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 111-th 
  frame name: sequences/girl/imgs/img00111.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (73, -58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (46, -21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (20, 16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-7, 53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-34, 90) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.937165
	>bestInd: 24832
	>m_bb: [origin: (170, 91) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (170, 91) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (170, 91) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2542d30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 112-th 
  frame name: sequences/girl/imgs/img00112.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (73, -55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (46, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (20, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-7, 56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-34, 93) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.97674
	>bestInd: 24290
	>m_bb: [origin: (170, 89) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (170, 89) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (170, 89) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2542d30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 113-th 
  frame name: sequences/girl/imgs/img00113.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (73, -53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (46, -16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (20, 21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-7, 58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-34, 95) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.984604
	>bestInd: 23751
	>m_bb: [origin: (173, 87) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (173, 87) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (173, 87) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2542d30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 114-th 
  frame name: sequences/girl/imgs/img00114.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51488
          sample.GetRects().size() = 51488
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (70, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (43, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (17, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-10, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-37, 97) size: (130, 211)]
	  >results.size() = 51488
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.989802
	>bestInd: 23470
	>m_bb: [origin: (163, 86) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (163, 86) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (163, 86) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2542d30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 115-th 
  frame name: sequences/girl/imgs/img00115.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (80, -50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (53, -13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (27, 24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (0, 61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-27, 98) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.959205
	>bestInd: 24000
	>m_bb: [origin: (152, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (152, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (152, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2542d30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 116-th 
  frame name: sequences/girl/imgs/img00116.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (91, -52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (64, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (38, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (11, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-16, 96) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.94985
	>bestInd: 22646
	>m_bb: [origin: (152, 83) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (152, 83) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (152, 83) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2542d30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 117-th 
  frame name: sequences/girl/imgs/img00117.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (91, -47) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (64, -10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (38, 27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (11, 64) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-16, 101) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.94532
	>bestInd: 22647
	>m_bb: [origin: (154, 83) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (154, 83) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (154, 83) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x24abec0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 118-th 
  frame name: sequences/girl/imgs/img00118.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (89, -47) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (62, -10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (36, 27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (9, 64) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-18, 101) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.955611
	>bestInd: 22650
	>m_bb: [origin: (157, 83) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (157, 83) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (157, 83) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x299c0d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 119-th 
  frame name: sequences/girl/imgs/img00119.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (86, -47) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (59, -10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (33, 27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (6, 64) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-21, 101) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.01961
	>bestInd: 22114
	>m_bb: [origin: (162, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (162, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (162, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x1a68f60
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 120-th 
  frame name: sequences/girl/imgs/img00120.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (81, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (54, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (28, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (1, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-26, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.03721
	>bestInd: 22117
	>m_bb: [origin: (166, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (166, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (166, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x299c0d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 121-th 
  frame name: sequences/girl/imgs/img00121.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (77, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (50, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (24, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-3, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-30, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.06148
	>bestInd: 22122
	>m_bb: [origin: (171, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (171, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (171, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2543750
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 122-th 
  frame name: sequences/girl/imgs/img00122.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51480
          sample.GetRects().size() = 51480
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (72, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (45, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (19, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-8, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-35, 103) size: (130, 211)]
	  >results.size() = 51480
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.07717
	>bestInd: 21855
	>m_bb: [origin: (174, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (174, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (174, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2a3d020
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 123-th 
  frame name: sequences/girl/imgs/img00123.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51449
          sample.GetRects().size() = 51449
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (69, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (42, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (16, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-11, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-25, 104) size: (130, 211)]
	  >results.size() = 51449
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.09625
	>bestInd: 20756
	>m_bb: [origin: (159, 76) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (159, 76) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (159, 76) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2b0ad30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 124-th 
  frame name: sequences/girl/imgs/img00124.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (84, -40) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (57, -3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (31, 34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (4, 71) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-23, 108) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.06401
	>bestInd: 19932
	>m_bb: [origin: (148, 73) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (148, 73) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (148, 73) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2b0ad80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 125-th 
  frame name: sequences/girl/imgs/img00125.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (95, -37) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (69, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (42, 37) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (15, 74) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-12, 111) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.02993
	>bestInd: 19384
	>m_bb: [origin: (142, 71) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (142, 71) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (142, 71) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a51ab0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 126-th 
  frame name: sequences/girl/imgs/img00126.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (101, -35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (75, 2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (48, 39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (21, 76) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-6, 113) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.04284
	>bestInd: 18297
	>m_bb: [origin: (139, 67) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (139, 67) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (139, 67) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x292ed90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 127-th 
  frame name: sequences/girl/imgs/img00127.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (104, -31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (78, 6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (51, 43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (24, 80) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-3, 117) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.98848
	>bestInd: 16941
	>m_bb: [origin: (138, 62) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (138, 62) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (138, 62) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a507f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 128-th 
  frame name: sequences/girl/imgs/img00128.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (105, -26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (79, 11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (52, 48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (25, 85) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-2, 122) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.972994
	>bestInd: 15041
	>m_bb: [origin: (135, 55) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (135, 55) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (135, 55) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a507f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 129-th 
  frame name: sequences/girl/imgs/img00129.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (108, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (82, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (55, 55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (28, 92) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (1, 129) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.00212
	>bestInd: 13956
	>m_bb: [origin: (134, 51) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (134, 51) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (134, 51) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a51990
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 130-th 
  frame name: sequences/girl/imgs/img00130.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (109, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (83, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (56, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (29, 96) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (2, 133) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.997717
	>bestInd: 18833
	>m_bb: [origin: (134, 69) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (134, 69) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (134, 69) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x1a6b220
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 131-th 
  frame name: sequences/girl/imgs/img00131.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (109, -33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (83, 4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (56, 41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (29, 78) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (2, 115) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.02247
	>bestInd: 22900
	>m_bb: [origin: (136, 84) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (136, 84) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (136, 84) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a4da10
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 132-th 
  frame name: sequences/girl/imgs/img00132.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (107, -48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (80, -11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (54, 26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (27, 63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (0, 100) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.05564
	>bestInd: 25610
	>m_bb: [origin: (136, 94) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (136, 94) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (136, 94) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3d140
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 133-th 
  frame name: sequences/girl/imgs/img00133.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (107, -58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (80, -21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (54, 16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (27, 53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (0, 90) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.01998
	>bestInd: 27512
	>m_bb: [origin: (141, 101) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (141, 101) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (141, 101) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a4da10
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 134-th 
  frame name: sequences/girl/imgs/img00134.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (102, -65) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (75, -28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (49, 9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (22, 46) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-5, 83) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.05245
	>bestInd: 28869
	>m_bb: [origin: (143, 106) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (143, 106) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (143, 106) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3d140
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 135-th 
  frame name: sequences/girl/imgs/img00135.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (100, -70) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (73, -33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (47, 4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (20, 41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-7, 78) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.09263
	>bestInd: 30226
	>m_bb: [origin: (145, 111) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (145, 111) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (145, 111) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2545b70
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 136-th 
  frame name: sequences/girl/imgs/img00136.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (98, -75) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (71, -38) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (44, -1) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (18, 36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-9, 73) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.09081
	>bestInd: 31858
	>m_bb: [origin: (151, 117) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (151, 117) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (151, 117) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2534a20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 137-th 
  frame name: sequences/girl/imgs/img00137.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (92, -81) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (65, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (38, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (12, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-15, 67) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.15165
	>bestInd: 32407
	>m_bb: [origin: (158, 119) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (158, 119) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (158, 119) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x2a4da10
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 138-th 
  frame name: sequences/girl/imgs/img00138.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (85, -83) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (58, -46) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (31, -9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (5, 28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-22, 65) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.17291
	>bestInd: 33767
	>m_bb: [origin: (163, 124) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (163, 124) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (163, 124) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2541830
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 139-th 
  frame name: sequences/girl/imgs/img00139.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51458
          sample.GetRects().size() = 51458
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-159, -87) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (85, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (58, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (32, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (5, 60) size: (130, 211)]
	  >results.size() = 51458
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.19235
	>bestInd: 35095
	>m_bb: [origin: (168, 129) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (168, 129) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (168, 129) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x299c0d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 140-th 
  frame name: sequences/girl/imgs/img00140.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51324
          sample.GetRects().size() = 51324
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-30, -92) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-57, -55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-84, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-110, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-137, 56) size: (130, 211)]
	  >results.size() = 51324
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.199
	>bestInd: 35775
	>m_bb: [origin: (169, 132) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (169, 132) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (169, 132) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2535510
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 141-th 
  frame name: sequences/girl/imgs/img00141.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51246
          sample.GetRects().size() = 51246
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (47, -95) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (20, -58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-7, -21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-33, 16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-60, 53) size: (130, 211)]
	  >results.size() = 51246
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.19825
	>bestInd: 36237
	>m_bb: [origin: (167, 134) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (167, 134) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (167, 134) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x1a68f60
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 142-th 
  frame name: sequences/girl/imgs/img00142.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51259
          sample.GetRects().size() = 51259
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (36, -97) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (9, -60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-18, -23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-44, 14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-71, 51) size: (130, 211)]
	  >results.size() = 51259
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.18262
	>bestInd: 37050
	>m_bb: [origin: (154, 137) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (154, 137) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (154, 137) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x254f6a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 143-th 
  frame name: sequences/girl/imgs/img00143.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51442
          sample.GetRects().size() = 51442
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-134, -100) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (110, -64) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (83, -27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (57, 10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (30, 47) size: (130, 211)]
	  >results.size() = 51442
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.17152
	>bestInd: 39123
	>m_bb: [origin: (147, 144) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (147, 144) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (147, 144) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a3d020
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 144-th 
  frame name: sequences/girl/imgs/img00144.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51445
          sample.GetRects().size() = 51445
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-130, -107) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (114, -71) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (87, -34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (61, 3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (34, 40) size: (130, 211)]
	  >results.size() = 51445
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.17894
	>bestInd: 35057
	>m_bb: [origin: (142, 129) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (142, 129) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (142, 129) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x1a62f80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 145-th 
  frame name: sequences/girl/imgs/img00145.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (101, -93) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (74, -56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (47, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (21, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-6, 55) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.17584
	>bestInd: 30496
	>m_bb: [origin: (143, 112) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (143, 112) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (143, 112) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2b0ad80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 146-th 
  frame name: sequences/girl/imgs/img00146.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (100, -76) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (73, -39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (46, -2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (20, 35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-7, 72) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.18328
	>bestInd: 27517
	>m_bb: [origin: (145, 101) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (145, 101) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (145, 101) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2bc5430
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 147-th 
  frame name: sequences/girl/imgs/img00147.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (98, -65) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (71, -28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (45, 9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (18, 46) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-9, 83) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.16841
	>bestInd: 26712
	>m_bb: [origin: (153, 98) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (153, 98) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (153, 98) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2c92900
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 148-th 
  frame name: sequences/girl/imgs/img00148.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (90, -62) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (63, -25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (37, 12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (10, 49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-17, 86) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.16817
	>bestInd: 27528
	>m_bb: [origin: (157, 101) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (157, 101) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (157, 101) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2b11ca0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 149-th 
  frame name: sequences/girl/imgs/img00149.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (86, -65) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (59, -28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (33, 9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (6, 46) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-21, 83) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.17266
	>bestInd: 27530
	>m_bb: [origin: (159, 101) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (159, 101) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (159, 101) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x1a6b4d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 150-th 
  frame name: sequences/girl/imgs/img00150.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (84, -65) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (57, -28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (31, 9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (4, 46) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-23, 83) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.17999
	>bestInd: 28885
	>m_bb: [origin: (159, 106) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (159, 106) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (159, 106) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a3c220
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 151-th 
  frame name: sequences/girl/imgs/img00151.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (84, -70) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (57, -33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (31, 4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (4, 41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-23, 78) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.20622
	>bestInd: 24277
	>m_bb: [origin: (157, 89) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (157, 89) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (157, 89) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2b023b0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 152-th 
  frame name: sequences/girl/imgs/img00152.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (86, -53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (59, -16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (33, 21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (6, 58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-21, 95) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.2216
	>bestInd: 19937
	>m_bb: [origin: (153, 73) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (153, 73) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (153, 73) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x1a6b270
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 153-th 
  frame name: sequences/girl/imgs/img00153.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (90, -37) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (64, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (37, 37) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (10, 74) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-17, 111) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.22322
	>bestInd: 20747
	>m_bb: [origin: (151, 76) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (151, 76) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (151, 76) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x1a78640
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 154-th 
  frame name: sequences/girl/imgs/img00154.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (92, -40) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (65, -3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (39, 34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (12, 71) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-15, 108) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.21424
	>bestInd: 21289
	>m_bb: [origin: (151, 78) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (151, 78) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (151, 78) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2543d90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 155-th 
  frame name: sequences/girl/imgs/img00155.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (92, -42) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (65, -5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (39, 32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (12, 69) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-15, 106) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.1986
	>bestInd: 21291
	>m_bb: [origin: (153, 78) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (153, 78) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (153, 78) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x1a78640
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 156-th 
  frame name: sequences/girl/imgs/img00156.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (90, -42) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (63, -5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (37, 32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (10, 69) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-17, 106) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.18026
	>bestInd: 21834
	>m_bb: [origin: (154, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (154, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (154, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2543d90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 157-th 
  frame name: sequences/girl/imgs/img00157.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (89, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (62, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (36, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (9, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-18, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.14275
	>bestInd: 21834
	>m_bb: [origin: (153, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (153, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (153, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x1a78640
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 158-th 
  frame name: sequences/girl/imgs/img00158.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (90, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (63, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (37, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (10, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-17, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.15115
	>bestInd: 22645
	>m_bb: [origin: (152, 83) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (152, 83) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (152, 83) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2543d90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 159-th 
  frame name: sequences/girl/imgs/img00159.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (91, -47) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (64, -10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (38, 27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (11, 64) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-16, 101) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.13542
	>bestInd: 23183
	>m_bb: [origin: (148, 85) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (148, 85) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (148, 85) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x1a78640
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 160-th 
  frame name: sequences/girl/imgs/img00160.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (95, -49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (68, -12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (42, 25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (15, 62) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-12, 99) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.14467
	>bestInd: 23451
	>m_bb: [origin: (145, 86) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (145, 86) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (145, 86) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2541830
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 161-th 
  frame name: sequences/girl/imgs/img00161.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (98, -50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (71, -13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (45, 24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (18, 61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-9, 98) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.1344
	>bestInd: 23719
	>m_bb: [origin: (142, 87) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (142, 87) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (142, 87) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2543f80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 162-th 
  frame name: sequences/girl/imgs/img00162.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (101, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (74, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (48, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (21, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-6, 97) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.0968
	>bestInd: 24257
	>m_bb: [origin: (138, 89) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (138, 89) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (138, 89) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2922c90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 163-th 
  frame name: sequences/girl/imgs/img00163.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (105, -53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (78, -16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (52, 21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (25, 58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-2, 95) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.05644
	>bestInd: 24256
	>m_bb: [origin: (136, 89) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (136, 89) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (136, 89) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a5a1f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 164-th 
  frame name: sequences/girl/imgs/img00164.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (107, -53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (80, -16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (54, 21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (27, 58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (0, 95) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.98622
	>bestInd: 23981
	>m_bb: [origin: (132, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (132, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (132, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3c220
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 165-th 
  frame name: sequences/girl/imgs/img00165.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (111, -52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (84, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (58, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (31, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (4, 96) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.945851
	>bestInd: 23978
	>m_bb: [origin: (129, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (129, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (129, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x299bf80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 166-th 
  frame name: sequences/girl/imgs/img00166.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (114, -52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (87, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (61, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (34, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (7, 96) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.888565
	>bestInd: 23975
	>m_bb: [origin: (126, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (126, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (126, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2b0ad30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 167-th 
  frame name: sequences/girl/imgs/img00167.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (117, -52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (90, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (64, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (37, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (10, 96) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.831627
	>bestInd: 23700
	>m_bb: [origin: (122, 87) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (122, 87) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (122, 87) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2b0ad80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 168-th 
  frame name: sequences/girl/imgs/img00168.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (121, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (94, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (68, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (41, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (14, 97) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.76491
	>bestInd: 23698
	>m_bb: [origin: (120, 87) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (120, 87) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (120, 87) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2543720
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [20, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 169-th 
  frame name: sequences/girl/imgs/img00169.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (123, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (96, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (70, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (43, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (16, 97) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.726723
	>bestInd: 23423
	>m_bb: [origin: (116, 86) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (116, 86) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (116, 86) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x25595c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [20, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 170-th 
  frame name: sequences/girl/imgs/img00170.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (127, -50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (100, -13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (74, 24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (47, 61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (20, 98) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.70236
	>bestInd: 23686
	>m_bb: [origin: (109, 87) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (109, 87) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (109, 87) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2944010
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [20, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=21
==============================================

=>main.cpp: start frame loop
>>frameLoop: 171-th 
  frame name: sequences/girl/imgs/img00171.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (134, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (107, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (81, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (54, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (27, 97) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.737329
	>bestInd: 23414
	>m_bb: [origin: (107, 86) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (107, 86) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (107, 86) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2a33b90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=22
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(21)
++    ProcessNew(21)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [21, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=21
==============================================

=>main.cpp: start frame loop
>>frameLoop: 172-th 
  frame name: sequences/girl/imgs/img00172.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (136, -50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (109, -13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (83, 24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (56, 61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (29, 98) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.816383
	>bestInd: 23141
	>m_bb: [origin: (105, 85) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (105, 85) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (105, 85) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2537b20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=22
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(21)
++    ProcessNew(21)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [21, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=22
==============================================

=>main.cpp: start frame loop
>>frameLoop: 173-th 
  frame name: sequences/girl/imgs/img00173.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (138, -49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (111, -12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (85, 25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (58, 62) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (31, 99) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.822318
	>bestInd: 23413
	>m_bb: [origin: (107, 86) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (107, 86) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (107, 86) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2a507f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(22)
++    ProcessNew(22)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 174-th 
  frame name: sequences/girl/imgs/img00174.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (136, -50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (109, -13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (83, 24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (56, 61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (29, 98) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.768738
	>bestInd: 24236
	>m_bb: [origin: (117, 89) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (117, 89) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (117, 89) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2543e20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=22
==============================================

=>main.cpp: start frame loop
>>frameLoop: 175-th 
  frame name: sequences/girl/imgs/img00175.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (126, -53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (99, -16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (73, 21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (46, 58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (19, 95) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.785951
	>bestInd: 24514
	>m_bb: [origin: (124, 90) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (124, 90) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (124, 90) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x29513f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(22)
++    ProcessNew(22)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 176-th 
  frame name: sequences/girl/imgs/img00176.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (119, -54) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (92, -17) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (66, 20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (39, 57) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (12, 94) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.787004
	>bestInd: 24246
	>m_bb: [origin: (126, 89) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (126, 89) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (126, 89) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x24abec0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 177-th 
  frame name: sequences/girl/imgs/img00177.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (117, -53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (90, -16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (64, 21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (37, 58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (10, 95) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.767475
	>bestInd: 23703
	>m_bb: [origin: (125, 87) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (125, 87) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (125, 87) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2543d90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 178-th 
  frame name: sequences/girl/imgs/img00178.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (118, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (91, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (65, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (38, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (11, 97) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.758648
	>bestInd: 23700
	>m_bb: [origin: (122, 87) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (122, 87) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (122, 87) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x1a78640
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 179-th 
  frame name: sequences/girl/imgs/img00179.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (121, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (94, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (68, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (41, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (14, 97) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.78351
	>bestInd: 23699
	>m_bb: [origin: (121, 87) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (121, 87) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (121, 87) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a4dfd0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 180-th 
  frame name: sequences/girl/imgs/img00180.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (122, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (95, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (69, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (42, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (15, 97) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.775326
	>bestInd: 23427
	>m_bb: [origin: (120, 86) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (120, 86) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (120, 86) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a4da10
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 181-th 
  frame name: sequences/girl/imgs/img00181.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (123, -50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (96, -13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (70, 24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (43, 61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (16, 98) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.837553
	>bestInd: 22344
	>m_bb: [origin: (121, 82) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (121, 82) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (121, 82) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2535510
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 182-th 
  frame name: sequences/girl/imgs/img00182.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (122, -46) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (95, -9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (69, 28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (42, 65) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (15, 102) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.876028
	>bestInd: 21804
	>m_bb: [origin: (123, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (123, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (123, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x1a68f60
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 183-th 
  frame name: sequences/girl/imgs/img00183.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (120, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (93, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (67, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (40, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (13, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.883126
	>bestInd: 20992
	>m_bb: [origin: (124, 77) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (124, 77) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (124, 77) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2922c90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 184-th 
  frame name: sequences/girl/imgs/img00184.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (119, -41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (92, -4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (66, 33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (39, 70) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (12, 107) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.892317
	>bestInd: 20725
	>m_bb: [origin: (128, 76) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (128, 76) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (128, 76) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x291f1a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 185-th 
  frame name: sequences/girl/imgs/img00185.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (115, -40) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (88, -3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (62, 34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (35, 71) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (8, 108) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.91805
	>bestInd: 19918
	>m_bb: [origin: (134, 73) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (134, 73) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (134, 73) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x29212c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 186-th 
  frame name: sequences/girl/imgs/img00186.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (109, -37) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (83, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (56, 37) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (29, 74) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (2, 111) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.95543
	>bestInd: 18843
	>m_bb: [origin: (143, 69) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (143, 69) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (143, 69) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x1a6b4d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 187-th 
  frame name: sequences/girl/imgs/img00187.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (100, -33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (74, 4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (47, 41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (20, 78) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-7, 115) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.906297
	>bestInd: 22100
	>m_bb: [origin: (149, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (149, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (149, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x299bf20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 188-th 
  frame name: sequences/girl/imgs/img00188.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (94, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (67, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (41, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (14, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-13, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.929356
	>bestInd: 22107
	>m_bb: [origin: (156, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (156, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (156, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x1a6b420
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 189-th 
  frame name: sequences/girl/imgs/img00189.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (87, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (60, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (34, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (7, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-20, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.874202
	>bestInd: 20757
	>m_bb: [origin: (160, 76) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (160, 76) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (160, 76) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x299bfb0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 190-th 
  frame name: sequences/girl/imgs/img00190.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (83, -40) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (56, -3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (30, 34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (3, 71) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-24, 108) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.873917
	>bestInd: 18866
	>m_bb: [origin: (166, 69) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (166, 69) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (166, 69) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2b02e20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 191-th 
  frame name: sequences/girl/imgs/img00191.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51458
          sample.GetRects().size() = 51458
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (77, -33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (51, 4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (24, 41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-3, 78) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-23, 115) size: (130, 211)]
	  >results.size() = 51458
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.932049
	>bestInd: 16972
	>m_bb: [origin: (169, 62) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (169, 62) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (169, 62) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3c290
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 192-th 
  frame name: sequences/girl/imgs/img00192.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51334
          sample.GetRects().size() = 51334
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (74, -26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (48, 11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (21, 48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-6, 85) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (56, 122) size: (130, 211)]
	  >results.size() = 51334
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.886659
	>bestInd: 16701
	>m_bb: [origin: (169, 61) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (169, 61) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (169, 61) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x29615a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 193-th 
  frame name: sequences/girl/imgs/img00193.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51318
          sample.GetRects().size() = 51318
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (74, -25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (48, 12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (21, 49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-6, 86) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (68, 123) size: (130, 211)]
	  >results.size() = 51318
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.904097
	>bestInd: 16970
	>m_bb: [origin: (168, 62) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (168, 62) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (168, 62) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x29615a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 194-th 
  frame name: sequences/girl/imgs/img00194.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51355
          sample.GetRects().size() = 51355
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (75, -26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (49, 11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (22, 48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-5, 85) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (41, 122) size: (130, 211)]
	  >results.size() = 51355
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.871788
	>bestInd: 17235
	>m_bb: [origin: (162, 63) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (162, 63) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (162, 63) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x290f830
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 195-th 
  frame name: sequences/girl/imgs/img00195.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51454
          sample.GetRects().size() = 51454
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (81, -27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (55, 10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (28, 47) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (1, 84) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-18, 121) size: (130, 211)]
	  >results.size() = 51454
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.885468
	>bestInd: 16687
	>m_bb: [origin: (155, 61) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (155, 61) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (155, 61) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2a507f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 196-th 
  frame name: sequences/girl/imgs/img00196.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51487
          sample.GetRects().size() = 51487
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (88, -25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (62, 12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (35, 49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (8, 86) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-19, 123) size: (130, 211)]
	  >results.size() = 51487
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.868594
	>bestInd: 16136
	>m_bb: [origin: (146, 59) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (146, 59) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (146, 59) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a3d140
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 197-th 
  frame name: sequences/girl/imgs/img00197.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (97, -23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (71, 14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (44, 51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (17, 88) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-10, 125) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.82755
	>bestInd: 21274
	>m_bb: [origin: (136, 78) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (136, 78) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (136, 78) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2961520
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [27, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=28
==============================================

=>main.cpp: start frame loop
>>frameLoop: 198-th 
  frame name: sequences/girl/imgs/img00198.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (107, -42) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (80, -5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (54, 32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (27, 69) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (0, 106) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.835199
	>bestInd: 20726
	>m_bb: [origin: (129, 76) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (129, 76) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (129, 76) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x297c2b0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=29
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(28)
++    ProcessNew(28)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [28, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=28
==============================================

=>main.cpp: start frame loop
>>frameLoop: 199-th 
  frame name: sequences/girl/imgs/img00199.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (114, -40) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (87, -3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (61, 34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (34, 71) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (7, 108) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.856529
	>bestInd: 20449
	>m_bb: [origin: (123, 75) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (123, 75) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (123, 75) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x1a5d710
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=29
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(28)
++    ProcessNew(28)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [28, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=29
==============================================

=>main.cpp: start frame loop
>>frameLoop: 200-th 
  frame name: sequences/girl/imgs/img00200.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (120, -39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (93, -2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (67, 35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (40, 72) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (13, 109) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.87932
	>bestInd: 19094
	>m_bb: [origin: (123, 70) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (123, 70) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (123, 70) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x29513f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=30
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(29)
++    ProcessNew(29)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [28, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=29
==============================================

=>main.cpp: start frame loop
>>frameLoop: 201-th 
  frame name: sequences/girl/imgs/img00201.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (120, -34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (94, 3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (67, 40) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (40, 77) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (13, 114) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.850965
	>bestInd: 19632
	>m_bb: [origin: (120, 72) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (120, 72) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (120, 72) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x29513f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=30
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(29)
++    ProcessNew(29)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [28, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=29
==============================================

=>main.cpp: start frame loop
>>frameLoop: 202-th 
  frame name: sequences/girl/imgs/img00202.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (123, -36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (97, 1) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (70, 38) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (43, 75) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (16, 112) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.858911
	>bestInd: 20714
	>m_bb: [origin: (118, 76) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (118, 76) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (118, 76) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2922c90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=30
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(29)
++    ProcessNew(29)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [28, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=29
==============================================

=>main.cpp: start frame loop
>>frameLoop: 203-th 
  frame name: sequences/girl/imgs/img00203.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (125, -40) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (98, -3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (72, 34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (45, 71) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (18, 108) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.809592
	>bestInd: 19627
	>m_bb: [origin: (114, 72) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (114, 72) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (114, 72) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2922c90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=30
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(29)
++    ProcessNew(29)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [28, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=29
==============================================

=>main.cpp: start frame loop
>>frameLoop: 204-th 
  frame name: sequences/girl/imgs/img00204.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (129, -36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (103, 1) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (76, 38) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (49, 75) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (22, 112) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.820804
	>bestInd: 18813
	>m_bb: [origin: (113, 69) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (113, 69) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (113, 69) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x2a5a1f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=30
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(29)
++    ProcessNew(29)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [28, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=29
==============================================

=>main.cpp: start frame loop
>>frameLoop: 205-th 
  frame name: sequences/girl/imgs/img00205.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (130, -33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (104, 4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (77, 41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (50, 78) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (23, 115) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.815719
	>bestInd: 18809
	>m_bb: [origin: (109, 69) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (109, 69) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (109, 69) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2921270
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=30
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(29)
++    ProcessNew(29)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [29, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 206-th 
  frame name: sequences/girl/imgs/img00206.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51488
          sample.GetRects().size() = 51488
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (134, -33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (108, 4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (81, 41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (54, 78) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (27, 115) size: (130, 211)]
	  >results.size() = 51488
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.838792
	>bestInd: 18259
	>m_bb: [origin: (101, 67) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (101, 67) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (101, 67) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x299ea00
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 207-th 
  frame name: sequences/girl/imgs/img00207.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51401
          sample.GetRects().size() = 51401
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (142, -31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (116, 6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (89, 43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (62, 80) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (70, 117) size: (130, 211)]
	  >results.size() = 51401
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.833267
	>bestInd: 18245
	>m_bb: [origin: (87, 67) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (87, 67) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (87, 67) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2544910
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 208-th 
  frame name: sequences/girl/imgs/img00208.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50998
          sample.GetRects().size() = 50998
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (156, -31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (130, 6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (103, 43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (76, 80) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (153, 118) size: (130, 211)]
	  >results.size() = 50998
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.860345
	>bestInd: 18795
	>m_bb: [origin: (96, 69) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (96, 69) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (96, 69) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a6f710
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [27, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 209-th 
  frame name: sequences/girl/imgs/img00209.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51330
          sample.GetRects().size() = 51330
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (147, -33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (121, 4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (94, 41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (67, 78) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (124, 115) size: (130, 211)]
	  >results.size() = 51330
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.832315
	>bestInd: 18267
	>m_bb: [origin: (109, 67) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (109, 67) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (109, 67) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a3db90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [27, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 210-th 
  frame name: sequences/girl/imgs/img00210.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51483
          sample.GetRects().size() = 51483
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (134, -31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (108, 6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (81, 43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (54, 80) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (27, 117) size: (130, 211)]
	  >results.size() = 51483
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.863073
	>bestInd: 17734
	>m_bb: [origin: (118, 65) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (118, 65) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (118, 65) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3d020
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 211-th 
  frame name: sequences/girl/imgs/img00211.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (125, -29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (99, 8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (72, 45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (45, 82) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (18, 119) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.936628
	>bestInd: 16650
	>m_bb: [origin: (118, 61) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (118, 61) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (118, 61) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2a3db20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 212-th 
  frame name: sequences/girl/imgs/img00212.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (125, -25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (99, 12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (72, 49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (45, 86) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (18, 123) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.948609
	>bestInd: 16375
	>m_bb: [origin: (114, 60) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (114, 60) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (114, 60) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2a4dfd0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 213-th 
  frame name: sequences/girl/imgs/img00213.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51480
          sample.GetRects().size() = 51480
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (129, -24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (103, 13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (76, 50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (49, 87) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (22, 124) size: (130, 211)]
	  >results.size() = 51480
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.00472
	>bestInd: 16645
	>m_bb: [origin: (114, 61) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (114, 61) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (114, 61) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2a3d020
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 214-th 
  frame name: sequences/girl/imgs/img00214.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51484
          sample.GetRects().size() = 51484
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (129, -25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (103, 12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (76, 49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (49, 86) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (22, 123) size: (130, 211)]
	  >results.size() = 51484
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.01836
	>bestInd: 19083
	>m_bb: [origin: (113, 70) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (113, 70) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (113, 70) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x2a3d020
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 215-th 
  frame name: sequences/girl/imgs/img00215.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (130, -34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (104, 3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (77, 40) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (50, 77) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (23, 114) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.03879
	>bestInd: 21253
	>m_bb: [origin: (115, 78) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (115, 78) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (115, 78) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2c66590
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 216-th 
  frame name: sequences/girl/imgs/img00216.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (128, -42) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (101, -5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (75, 32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (48, 69) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (21, 106) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.07535
	>bestInd: 22883
	>m_bb: [origin: (119, 84) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (119, 84) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (119, 84) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a33aa0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 217-th 
  frame name: sequences/girl/imgs/img00217.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (124, -48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (97, -11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (71, 26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (44, 63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (17, 100) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.05836
	>bestInd: 23430
	>m_bb: [origin: (124, 86) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (124, 86) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (124, 86) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2b02e20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 218-th 
  frame name: sequences/girl/imgs/img00218.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (119, -50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (92, -13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (66, 24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (39, 61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (12, 98) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.06743
	>bestInd: 22894
	>m_bb: [origin: (129, 84) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (129, 84) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (129, 84) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x24abf30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 219-th 
  frame name: sequences/girl/imgs/img00219.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (114, -48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (87, -11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (61, 26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (34, 63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (7, 100) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.072
	>bestInd: 21002
	>m_bb: [origin: (134, 77) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (134, 77) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (134, 77) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x1a5d710
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 220-th 
  frame name: sequences/girl/imgs/img00220.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (109, -41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (82, -4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (56, 33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (29, 70) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (2, 107) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.04248
	>bestInd: 20466
	>m_bb: [origin: (140, 75) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (140, 75) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (140, 75) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2b02e20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 221-th 
  frame name: sequences/girl/imgs/img00221.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (103, -39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (76, -2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (50, 35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (23, 72) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-4, 109) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.05393
	>bestInd: 19663
	>m_bb: [origin: (150, 72) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (150, 72) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (150, 72) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x24abf30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 222-th 
  frame name: sequences/girl/imgs/img00222.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (93, -36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (67, 1) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (40, 38) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (13, 75) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-14, 112) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.07312
	>bestInd: 18856
	>m_bb: [origin: (156, 69) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (156, 69) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (156, 69) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x1a5d710
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 223-th 
  frame name: sequences/girl/imgs/img00223.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (87, -33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (61, 4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (34, 41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (7, 78) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-20, 115) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.05469
	>bestInd: 18318
	>m_bb: [origin: (160, 67) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (160, 67) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (160, 67) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a507f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 224-th 
  frame name: sequences/girl/imgs/img00224.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51487
          sample.GetRects().size() = 51487
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (83, -31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (57, 6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (30, 43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (3, 80) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-24, 117) size: (130, 211)]
	  >results.size() = 51487
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.06639
	>bestInd: 17777
	>m_bb: [origin: (161, 65) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (161, 65) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (161, 65) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2540b20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 225-th 
  frame name: sequences/girl/imgs/img00225.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51474
          sample.GetRects().size() = 51474
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (82, -29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (56, 8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (29, 45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (2, 82) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-24, 119) size: (130, 211)]
	  >results.size() = 51474
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.04882
	>bestInd: 16423
	>m_bb: [origin: (162, 60) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (162, 60) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (162, 60) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2540b20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 226-th 
  frame name: sequences/girl/imgs/img00226.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51427
          sample.GetRects().size() = 51427
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (81, -24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (55, 13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (28, 50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (1, 87) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-3, 124) size: (130, 211)]
	  >results.size() = 51427
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.01101
	>bestInd: 0
	>m_bb: [origin: (162, 60) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (162, 60) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (162, 60) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2543f80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 227-th 
  frame name: sequences/girl/imgs/img00227.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51427
          sample.GetRects().size() = 51427
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (81, -24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (55, 13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (28, 50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (1, 87) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-3, 124) size: (130, 211)]
	  >results.size() = 51427
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.00351
	>bestInd: 15881
	>m_bb: [origin: (162, 58) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (162, 58) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (162, 58) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2b23580
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 228-th 
  frame name: sequences/girl/imgs/img00228.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51405
          sample.GetRects().size() = 51405
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (81, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (55, 15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (28, 52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (1, 89) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (10, 126) size: (130, 211)]
	  >results.size() = 51405
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.0103
	>bestInd: 15341
	>m_bb: [origin: (164, 56) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (164, 56) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (164, 56) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2533fa0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 229-th 
  frame name: sequences/girl/imgs/img00229.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51343
          sample.GetRects().size() = 51343
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (79, -20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (53, 17) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (26, 54) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-1, 91) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (52, 128) size: (130, 211)]
	  >results.size() = 51343
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.01766
	>bestInd: 15884
	>m_bb: [origin: (166, 58) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (166, 58) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (166, 58) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x297b600
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 230-th 
  frame name: sequences/girl/imgs/img00230.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51334
          sample.GetRects().size() = 51334
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (77, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (51, 15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (24, 52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-3, 89) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (57, 126) size: (130, 211)]
	  >results.size() = 51334
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.00839
	>bestInd: 15885
	>m_bb: [origin: (167, 58) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (167, 58) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (167, 58) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x299ea40
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 231-th 
  frame name: sequences/girl/imgs/img00231.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51313
          sample.GetRects().size() = 51313
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (76, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (50, 15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (23, 52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-4, 89) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (72, 126) size: (130, 211)]
	  >results.size() = 51313
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.981075
	>bestInd: 15612
	>m_bb: [origin: (164, 57) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (164, 57) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (164, 57) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2544910
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 232-th 
  frame name: sequences/girl/imgs/img00232.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51358
          sample.GetRects().size() = 51358
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (79, -21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (53, 16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (26, 53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-1, 90) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (41, 127) size: (130, 211)]
	  >results.size() = 51358
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.00924
	>bestInd: 15880
	>m_bb: [origin: (162, 58) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (162, 58) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (162, 58) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x254f760
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 233-th 
  frame name: sequences/girl/imgs/img00233.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51405
          sample.GetRects().size() = 51405
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (81, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (55, 15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (28, 52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (1, 89) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (10, 126) size: (130, 211)]
	  >results.size() = 51405
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.09606
	>bestInd: 16162
	>m_bb: [origin: (173, 59) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (173, 59) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (173, 59) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2a33aa0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 234-th 
  frame name: sequences/girl/imgs/img00234.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51173
          sample.GetRects().size() = 51173
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (70, -23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (44, 14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (17, 51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-10, 88) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-73, 126) size: (130, 211)]
	  >results.size() = 51173
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.10672
	>bestInd: 16442
	>m_bb: [origin: (182, 60) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (182, 60) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (182, 60) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2923550
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 235-th 
  frame name: sequences/girl/imgs/img00235.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50849
          sample.GetRects().size() = 50849
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (61, -24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (35, 13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (8, 50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-12, 87) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-34, 126) size: (130, 211)]
	  >results.size() = 50849
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.12915
	>bestInd: 16432
	>m_bb: [origin: (171, 60) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (171, 60) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (171, 60) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2534b40
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 236-th 
  frame name: sequences/girl/imgs/img00236.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51251
          sample.GetRects().size() = 51251
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (72, -24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (46, 13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (19, 50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-8, 87) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-137, 125) size: (130, 211)]
	  >results.size() = 51251
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.14728
	>bestInd: 16692
	>m_bb: [origin: (161, 61) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (161, 61) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (161, 61) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x29235e0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 237-th 
  frame name: sequences/girl/imgs/img00237.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51448
          sample.GetRects().size() = 51448
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (82, -25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (56, 12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (29, 49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (2, 86) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-14, 123) size: (130, 211)]
	  >results.size() = 51448
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.14932
	>bestInd: 18033
	>m_bb: [origin: (147, 66) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (147, 66) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (147, 66) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2534b40
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 238-th 
  frame name: sequences/girl/imgs/img00238.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (96, -30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (70, 7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (43, 44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (16, 81) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-11, 118) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.16504
	>bestInd: 17225
	>m_bb: [origin: (151, 63) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (151, 63) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (151, 63) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x24abe60
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 239-th 
  frame name: sequences/girl/imgs/img00239.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (92, -27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (66, 10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (39, 47) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (12, 84) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-15, 121) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.19191
	>bestInd: 13164
	>m_bb: [origin: (155, 48) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (155, 48) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (155, 48) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2544e20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 240-th 
  frame name: sequences/girl/imgs/img00240.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51381
          sample.GetRects().size() = 51381
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (88, -12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (62, 25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (35, 62) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (8, 99) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (30, 136) size: (130, 211)]
	  >results.size() = 51381
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.13889
	>bestInd: 9105
	>m_bb: [origin: (161, 33) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (161, 33) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (161, 33) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2545b70
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 241-th 
  frame name: sequences/girl/imgs/img00241.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50839
          sample.GetRects().size() = 50839
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (83, 3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (56, 40) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (29, 77) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (2, 114) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-21, 153) size: (130, 211)]
	  >results.size() = 50839
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.09008
	>bestInd: 5318
	>m_bb: [origin: (168, 19) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (168, 19) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (168, 19) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3d140
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 242-th 
  frame name: sequences/girl/imgs/img00242.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 49786
          sample.GetRects().size() = 49786
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (76, 17) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (49, 54) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (22, 91) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-110, 129) size: (130, 211)]
	  >results.size() = 49786
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.10876
	>bestInd: 3155
	>m_bb: [origin: (173, 11) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (173, 11) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (173, 11) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x24abf30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 243-th 
  frame name: sequences/girl/imgs/img00243.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 48831
          sample.GetRects().size() = 48831
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (71, 25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (44, 62) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (17, 99) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-31, 138) size: (130, 211)]
	  >results.size() = 48831
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.13624
	>bestInd: 3434
	>m_bb: [origin: (182, 12) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (182, 12) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (182, 12) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x24abe60
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 244-th 
  frame name: sequences/girl/imgs/img00244.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 48149
          sample.GetRects().size() = 48149
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (62, 24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (35, 61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (75, 98) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-116, 139) size: (130, 211)]
	  >results.size() = 48149
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.16163
	>bestInd: 4514
	>m_bb: [origin: (178, 16) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (178, 16) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (178, 16) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x253cc70
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 245-th 
  frame name: sequences/girl/imgs/img00245.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 48845
          sample.GetRects().size() = 48845
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (66, 20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (39, 57) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (16, 94) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (22, 133) size: (130, 211)]
	  >results.size() = 48845
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.19751
	>bestInd: 5860
	>m_bb: [origin: (169, 21) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (169, 21) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (169, 21) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2544e20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 246-th 
  frame name: sequences/girl/imgs/img00246.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 49849
          sample.GetRects().size() = 49849
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (75, 15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (48, 52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (21, 89) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-121, 127) size: (130, 211)]
	  >results.size() = 49849
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.18691
	>bestInd: 7212
	>m_bb: [origin: (166, 26) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (166, 26) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (166, 26) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2542d30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 247-th 
  frame name: sequences/girl/imgs/img00247.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50303
          sample.GetRects().size() = 50303
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (78, 10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (51, 47) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (24, 84) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (36, 121) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (22, 162) size: (130, 211)]
	  >results.size() = 50303
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.22468
	>bestInd: 8296
	>m_bb: [origin: (166, 30) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (166, 30) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (166, 30) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x1a68f60
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 248-th 
  frame name: sequences/girl/imgs/img00248.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50497
          sample.GetRects().size() = 50497
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (78, 6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (51, 43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (24, 80) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (12, 117) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (61, 157) size: (130, 211)]
	  >results.size() = 50497
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.19135
	>bestInd: 9369
	>m_bb: [origin: (155, 34) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (155, 34) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (155, 34) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x1a68f60
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 249-th 
  frame name: sequences/girl/imgs/img00249.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51076
          sample.GetRects().size() = 51076
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (89, 2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (62, 39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (35, 76) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (8, 113) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (14, 151) size: (130, 211)]
	  >results.size() = 51076
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.22859
	>bestInd: 10171
	>m_bb: [origin: (144, 37) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (144, 37) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (144, 37) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2922c90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 250-th 
  frame name: sequences/girl/imgs/img00250.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51384
          sample.GetRects().size() = 51384
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (99, -1) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (73, 36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (46, 73) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (19, 110) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (37, 147) size: (130, 211)]
	  >results.size() = 51384
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.23526
	>bestInd: 10976
	>m_bb: [origin: (136, 40) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (136, 40) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (136, 40) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2544c90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 251-th 
  frame name: sequences/girl/imgs/img00251.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51483
          sample.GetRects().size() = 51483
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (107, -4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (81, 33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (54, 70) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (27, 107) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (0, 144) size: (130, 211)]
	  >results.size() = 51483
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.18716
	>bestInd: 11243
	>m_bb: [origin: (132, 41) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (132, 41) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (132, 41) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x297b600
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 252-th 
  frame name: sequences/girl/imgs/img00252.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51480
          sample.GetRects().size() = 51480
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (111, -5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (85, 32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (58, 69) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (31, 106) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (4, 143) size: (130, 211)]
	  >results.size() = 51480
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.03325
	>bestInd: 14230
	>m_bb: [origin: (138, 52) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (138, 52) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (138, 52) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x297b650
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 253-th 
  frame name: sequences/girl/imgs/img00253.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (105, -16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (79, 21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (52, 58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (25, 95) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-2, 132) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.02169
	>bestInd: 16400
	>m_bb: [origin: (140, 60) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (140, 60) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (140, 60) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x1a6b500
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 254-th 
  frame name: sequences/girl/imgs/img00254.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (103, -24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (77, 13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (50, 50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (23, 87) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-4, 124) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.965453
	>bestInd: 17488
	>m_bb: [origin: (144, 64) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (144, 64) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (144, 64) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x254f750
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 255-th 
  frame name: sequences/girl/imgs/img00255.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (99, -28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (73, 9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (46, 46) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (19, 83) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-8, 120) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.930885
	>bestInd: 17493
	>m_bb: [origin: (149, 64) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (149, 64) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (149, 64) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x299ea40
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 256-th 
  frame name: sequences/girl/imgs/img00256.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (94, -28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (68, 9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (41, 46) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (14, 83) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-13, 120) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.991892
	>bestInd: 17226
	>m_bb: [origin: (152, 63) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (152, 63) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (152, 63) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3db00
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 257-th 
  frame name: sequences/girl/imgs/img00257.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (91, -27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (65, 10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (38, 47) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (11, 84) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-16, 121) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.0378
	>bestInd: 16418
	>m_bb: [origin: (157, 60) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (157, 60) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (157, 60) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a33aa0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 258-th 
  frame name: sequences/girl/imgs/img00258.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51474
          sample.GetRects().size() = 51474
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (86, -24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (60, 13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (33, 50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (6, 87) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-20, 124) size: (130, 211)]
	  >results.size() = 51474
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.04092
	>bestInd: 16151
	>m_bb: [origin: (161, 59) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (161, 59) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (161, 59) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2a33b10
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 259-th 
  frame name: sequences/girl/imgs/img00259.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51429
          sample.GetRects().size() = 51429
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (82, -23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (56, 14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (29, 51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (2, 88) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-4, 125) size: (130, 211)]
	  >results.size() = 51429
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.02573
	>bestInd: 16153
	>m_bb: [origin: (164, 59) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (164, 59) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (164, 59) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2b02e20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 260-th 
  frame name: sequences/girl/imgs/img00260.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51385
          sample.GetRects().size() = 51385
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (79, -23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (53, 14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (26, 51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-1, 88) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (22, 125) size: (130, 211)]
	  >results.size() = 51385
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.976113
	>bestInd: 15618
	>m_bb: [origin: (170, 57) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (170, 57) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (170, 57) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2a507f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 261-th 
  frame name: sequences/girl/imgs/img00261.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51219
          sample.GetRects().size() = 51219
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (73, -21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (47, 16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (20, 53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-7, 90) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-110, 128) size: (130, 211)]
	  >results.size() = 51219
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.00799
	>bestInd: 15079
	>m_bb: [origin: (173, 55) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (173, 55) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (173, 55) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2a3d140
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 262-th 
  frame name: sequences/girl/imgs/img00262.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51079
          sample.GetRects().size() = 51079
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (70, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (44, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (17, 55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-10, 92) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (9, 130) size: (130, 211)]
	  >results.size() = 51079
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.997409
	>bestInd: 14537
	>m_bb: [origin: (173, 53) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (173, 53) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (173, 53) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x24abe60
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 263-th 
  frame name: sequences/girl/imgs/img00263.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51026
          sample.GetRects().size() = 51026
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (70, -17) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (44, 20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (17, 57) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-10, 94) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (54, 132) size: (130, 211)]
	  >results.size() = 51026
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.972093
	>bestInd: 13447
	>m_bb: [origin: (167, 49) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (167, 49) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (167, 49) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x1a5d710
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 264-th 
  frame name: sequences/girl/imgs/img00264.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51124
          sample.GetRects().size() = 51124
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (76, -13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (50, 24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (23, 61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-4, 98) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-30, 136) size: (130, 211)]
	  >results.size() = 51124
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.976019
	>bestInd: 12634
	>m_bb: [origin: (167, 46) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (167, 46) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (167, 46) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2b02e20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 265-th 
  frame name: sequences/girl/imgs/img00265.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51043
          sample.GetRects().size() = 51043
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (76, -10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (50, 27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (23, 64) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-4, 101) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (39, 139) size: (130, 211)]
	  >results.size() = 51043
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.911633
	>bestInd: 13997
	>m_bb: [origin: (176, 51) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (176, 51) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (176, 51) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2a507f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 266-th 
  frame name: sequences/girl/imgs/img00266.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50843
          sample.GetRects().size() = 50843
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (67, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (41, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (14, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-11, 96) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-28, 135) size: (130, 211)]
	  >results.size() = 50843
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.839779
	>bestInd: 16985
	>m_bb: [origin: (183, 62) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (183, 62) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (183, 62) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2922c90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 267-th 
  frame name: sequences/girl/imgs/img00267.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50861
          sample.GetRects().size() = 50861
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (60, -26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (34, 11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (7, 48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-12, 85) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-44, 124) size: (130, 211)]
	  >results.size() = 50861
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.819378
	>bestInd: 20244
	>m_bb: [origin: (190, 74) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (190, 74) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (190, 74) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x29456a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 268-th 
  frame name: sequences/girl/imgs/img00268.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50811
          sample.GetRects().size() = 50811
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-186, -37) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (58, -1) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (32, 36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (32, 73) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (5, 112) size: (130, 211)]
	  >results.size() = 50811
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.779715
	>bestInd: 20477
	>m_bb: [origin: (184, 75) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (184, 75) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (184, 75) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2533fa0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 269-th 
  frame name: sequences/girl/imgs/img00269.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51141
          sample.GetRects().size() = 51141
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (59, -39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (32, -2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (6, 35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-21, 72) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-46, 110) size: (130, 211)]
	  >results.size() = 51141
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.797886
	>bestInd: 20229
	>m_bb: [origin: (174, 74) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (174, 74) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (174, 74) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x291f1a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 270-th 
  frame name: sequences/girl/imgs/img00270.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51395
          sample.GetRects().size() = 51395
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (69, -38) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (42, -1) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (16, 36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-11, 73) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (10, 110) size: (130, 211)]
	  >results.size() = 51395
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.810454
	>bestInd: 19403
	>m_bb: [origin: (161, 71) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (161, 71) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (161, 71) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a507f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 271-th 
  frame name: sequences/girl/imgs/img00271.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (82, -35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (56, 2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (29, 39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (2, 76) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-25, 113) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.862477
	>bestInd: 18851
	>m_bb: [origin: (151, 69) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (151, 69) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (151, 69) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2b23580
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 272-th 
  frame name: sequences/girl/imgs/img00272.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (92, -33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (66, 4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (39, 41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (12, 78) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-15, 115) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.898594
	>bestInd: 18033
	>m_bb: [origin: (146, 66) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (146, 66) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (146, 66) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2bc5310
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 273-th 
  frame name: sequences/girl/imgs/img00273.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (97, -30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (71, 7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (44, 44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (17, 81) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-10, 118) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.91139
	>bestInd: 17758
	>m_bb: [origin: (142, 65) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (142, 65) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (142, 65) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x254f750
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 274-th 
  frame name: sequences/girl/imgs/img00274.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (101, -29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (75, 8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (48, 45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (21, 82) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-6, 119) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.916727
	>bestInd: 18024
	>m_bb: [origin: (138, 66) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (138, 66) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (138, 66) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x254f760
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 275-th 
  frame name: sequences/girl/imgs/img00275.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (105, -30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (79, 7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (52, 44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (25, 81) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-2, 118) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.948674
	>bestInd: 18022
	>m_bb: [origin: (135, 66) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (135, 66) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (135, 66) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a33af0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 276-th 
  frame name: sequences/girl/imgs/img00276.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (108, -30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (82, 7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (55, 44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (28, 81) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (1, 118) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.959303
	>bestInd: 18020
	>m_bb: [origin: (133, 66) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (133, 66) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (133, 66) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2534b40
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 277-th 
  frame name: sequences/girl/imgs/img00277.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (110, -30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (84, 7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (57, 44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (30, 81) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (3, 118) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.955967
	>bestInd: 18018
	>m_bb: [origin: (131, 66) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (131, 66) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (131, 66) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a33b30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 278-th 
  frame name: sequences/girl/imgs/img00278.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (112, -30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (86, 7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (59, 44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (32, 81) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (5, 118) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.956531
	>bestInd: 17208
	>m_bb: [origin: (134, 63) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (134, 63) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (134, 63) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x29a0440
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 279-th 
  frame name: sequences/girl/imgs/img00279.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (109, -27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (83, 10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (56, 47) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (29, 84) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (2, 121) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.924142
	>bestInd: 16941
	>m_bb: [origin: (138, 62) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (138, 62) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (138, 62) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x253cae0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 280-th 
  frame name: sequences/girl/imgs/img00280.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (105, -26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (79, 11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (52, 48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (25, 85) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-2, 122) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.891247
	>bestInd: 15864
	>m_bb: [origin: (145, 58) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (145, 58) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (145, 58) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2534bb0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 281-th 
  frame name: sequences/girl/imgs/img00281.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (98, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (72, 15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (45, 52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (18, 89) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-9, 126) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.883251
	>bestInd: 15867
	>m_bb: [origin: (149, 58) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (149, 58) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (149, 58) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x24abf30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 282-th 
  frame name: sequences/girl/imgs/img00282.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (94, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (68, 15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (41, 52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (14, 89) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-13, 126) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.865673
	>bestInd: 15057
	>m_bb: [origin: (151, 55) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (151, 55) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (151, 55) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2544e20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 283-th 
  frame name: sequences/girl/imgs/img00283.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51484
          sample.GetRects().size() = 51484
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (92, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (66, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (39, 55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (12, 92) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-15, 129) size: (130, 211)]
	  >results.size() = 51484
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.857893
	>bestInd: 14789
	>m_bb: [origin: (154, 54) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (154, 54) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (154, 54) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2b02e20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 284-th 
  frame name: sequences/girl/imgs/img00284.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51459
          sample.GetRects().size() = 51459
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (89, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (63, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (36, 56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (9, 93) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-12, 130) size: (130, 211)]
	  >results.size() = 51459
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.848219
	>bestInd: 19399
	>m_bb: [origin: (158, 71) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (158, 71) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (158, 71) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x1a5d710
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 285-th 
  frame name: sequences/girl/imgs/img00285.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (85, -35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (59, 2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (32, 39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (5, 76) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-22, 113) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.809058
	>bestInd: 23738
	>m_bb: [origin: (161, 87) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (161, 87) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (161, 87) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2545b70
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 286-th 
  frame name: sequences/girl/imgs/img00286.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (82, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (55, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (29, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (2, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-25, 97) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.740554
	>bestInd: 24283
	>m_bb: [origin: (164, 89) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (164, 89) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (164, 89) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2a3d140
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 287-th 
  frame name: sequences/girl/imgs/img00287.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (79, -53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (52, -16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (26, 21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-1, 58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-28, 95) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.695306
	>bestInd: 24017
	>m_bb: [origin: (168, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (168, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (168, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x29513f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 288-th 
  frame name: sequences/girl/imgs/img00288.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (75, -52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (48, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (22, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-5, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-32, 96) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.698751
	>bestInd: 23210
	>m_bb: [origin: (174, 85) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (174, 85) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (174, 85) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x29a03f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 289-th 
  frame name: sequences/girl/imgs/img00289.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51477
          sample.GetRects().size() = 51477
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (69, -49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (42, -12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (16, 25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-11, 62) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-37, 99) size: (130, 211)]
	  >results.size() = 51477
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.691943
	>bestInd: 22941
	>m_bb: [origin: (176, 84) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (176, 84) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (176, 84) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2533fa0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 290-th 
  frame name: sequences/girl/imgs/img00290.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51453
          sample.GetRects().size() = 51453
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (67, -48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (40, -11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (14, 26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-13, 63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-28, 100) size: (130, 211)]
	  >results.size() = 51453
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.650671
	>bestInd: 23203
	>m_bb: [origin: (168, 85) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (168, 85) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (168, 85) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2543f80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 4
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 291-th 
  frame name: sequences/girl/imgs/img00291.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (75, -49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (48, -12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (22, 25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-5, 62) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-32, 99) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.635194
	>bestInd: 23741
	>m_bb: [origin: (164, 87) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (164, 87) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (164, 87) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x254a8c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 292-th 
  frame name: sequences/girl/imgs/img00292.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (79, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (52, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (26, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-1, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-28, 97) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.516417
	>bestInd: 24015
	>m_bb: [origin: (167, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (167, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (167, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2b23580
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=22
==============================================

=>main.cpp: start frame loop
>>frameLoop: 293-th 
  frame name: sequences/girl/imgs/img00293.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (76, -52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (49, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (23, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-4, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-31, 96) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.50782
	>bestInd: 24289
	>m_bb: [origin: (170, 89) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (170, 89) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (170, 89) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x1a6b250
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(22)
++    ProcessNew(22)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=21
==============================================

=>main.cpp: start frame loop
>>frameLoop: 294-th 
  frame name: sequences/girl/imgs/img00294.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (73, -53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (46, -16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (20, 21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-7, 58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-34, 95) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.558934
	>bestInd: 24287
	>m_bb: [origin: (167, 89) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (167, 89) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (167, 89) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2543f80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=22
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(21)
++    ProcessNew(21)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [21, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 295-th 
  frame name: sequences/girl/imgs/img00295.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (76, -53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (49, -16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (23, 21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-4, 58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-31, 95) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.66668
	>bestInd: 24022
	>m_bb: [origin: (173, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (173, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (173, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2542530
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [20, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=19
==============================================

=>main.cpp: start frame loop
>>frameLoop: 296-th 
  frame name: sequences/girl/imgs/img00296.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51489
          sample.GetRects().size() = 51489
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (70, -52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (43, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (17, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-10, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-37, 96) size: (130, 211)]
	  >results.size() = 51489
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.758143
	>bestInd: 24016
	>m_bb: [origin: (167, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (167, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (167, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x24b7a90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(19)
++    ProcessNew(19)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=19
==============================================

=>main.cpp: start frame loop
>>frameLoop: 297-th 
  frame name: sequences/girl/imgs/img00297.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (76, -52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (49, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (23, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-4, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-31, 96) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.809212
	>bestInd: 23739
	>m_bb: [origin: (161, 87) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (161, 87) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (161, 87) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2537b50
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(19)
++    ProcessNew(19)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=19
==============================================

=>main.cpp: start frame loop
>>frameLoop: 298-th 
  frame name: sequences/girl/imgs/img00298.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (82, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (55, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (29, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (2, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-25, 97) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.813883
	>bestInd: 24004
	>m_bb: [origin: (156, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (156, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (156, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a5a1c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(19)
++    ProcessNew(19)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=19
==============================================

=>main.cpp: start frame loop
>>frameLoop: 299-th 
  frame name: sequences/girl/imgs/img00299.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (87, -52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (60, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (34, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (7, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-20, 96) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.854177
	>bestInd: 24812
	>m_bb: [origin: (151, 91) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (151, 91) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (151, 91) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a2d160
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(19)
++    ProcessNew(19)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 300-th 
  frame name: sequences/girl/imgs/img00300.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (92, -55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (65, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (39, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (12, 56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-15, 93) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.808971
	>bestInd: 25358
	>m_bb: [origin: (155, 93) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (155, 93) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (155, 93) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a3d020
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [20, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=21
==============================================

=>main.cpp: start frame loop
>>frameLoop: 301-th 
  frame name: sequences/girl/imgs/img00301.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (88, -57) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (61, -20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (35, 17) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (8, 54) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-19, 91) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.858311
	>bestInd: 25903
	>m_bb: [origin: (158, 95) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (158, 95) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (158, 95) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a3bd70
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=22
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(21)
++    ProcessNew(21)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [21, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=19
==============================================

=>main.cpp: start frame loop
>>frameLoop: 302-th 
  frame name: sequences/girl/imgs/img00302.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (85, -59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (58, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (32, 15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (5, 52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-22, 89) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.826865
	>bestInd: 26718
	>m_bb: [origin: (160, 98) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (160, 98) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (160, 98) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x1a5d710
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(19)
++    ProcessNew(19)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 4
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 303-th 
  frame name: sequences/girl/imgs/img00303.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (83, -62) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (56, -25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (30, 12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (3, 49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-24, 86) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.862579
	>bestInd: 26991
	>m_bb: [origin: (162, 99) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (162, 99) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (162, 99) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x1a17300
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [20, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=21
==============================================

=>main.cpp: start frame loop
>>frameLoop: 304-th 
  frame name: sequences/girl/imgs/img00304.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (81, -63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (54, -26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (28, 11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (1, 48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-26, 85) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.858581
	>bestInd: 26992
	>m_bb: [origin: (163, 99) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (163, 99) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (163, 99) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2b02d50
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=22
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(21)
++    ProcessNew(21)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [21, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 305-th 
  frame name: sequences/girl/imgs/img00305.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (80, -63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (53, -26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (27, 11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (0, 48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-27, 85) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.8584
	>bestInd: 27806
	>m_bb: [origin: (164, 102) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (164, 102) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (164, 102) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x297c2b0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [20, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 306-th 
  frame name: sequences/girl/imgs/img00306.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (79, -66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (52, -29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (26, 8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-1, 45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-28, 82) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.815406
	>bestInd: 28068
	>m_bb: [origin: (155, 103) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (155, 103) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (155, 103) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x254a8c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [20, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=21
==============================================

=>main.cpp: start frame loop
>>frameLoop: 307-th 
  frame name: sequences/girl/imgs/img00307.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (88, -67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (61, -30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (35, 7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (8, 44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-19, 81) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.835428
	>bestInd: 28333
	>m_bb: [origin: (149, 104) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (149, 104) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (149, 104) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a6d8a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=22
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(21)
++    ProcessNew(21)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [21, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=22
==============================================

=>main.cpp: start frame loop
>>frameLoop: 308-th 
  frame name: sequences/girl/imgs/img00308.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (94, -68) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (67, -31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (41, 6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (14, 43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-13, 80) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.861027
	>bestInd: 29146
	>m_bb: [origin: (149, 107) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (149, 107) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (149, 107) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a85cc0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(22)
++    ProcessNew(22)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=22
==============================================

=>main.cpp: start frame loop
>>frameLoop: 309-th 
  frame name: sequences/girl/imgs/img00309.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (94, -71) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (67, -34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (41, 3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (14, 40) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-13, 77) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.821693
	>bestInd: 26982
	>m_bb: [origin: (152, 99) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (152, 99) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (152, 99) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x29615b0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(22)
++    ProcessNew(22)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=22
==============================================

=>main.cpp: start frame loop
>>frameLoop: 310-th 
  frame name: sequences/girl/imgs/img00310.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (91, -63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (64, -26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (38, 11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (11, 48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-16, 85) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.85469
	>bestInd: 24818
	>m_bb: [origin: (156, 91) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (156, 91) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (156, 91) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2922c90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(22)
++    ProcessNew(22)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 311-th 
  frame name: sequences/girl/imgs/img00311.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (87, -55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (60, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (34, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (7, 56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-20, 93) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.860925
	>bestInd: 25633
	>m_bb: [origin: (159, 94) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (159, 94) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (159, 94) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2541800
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=21
==============================================

=>main.cpp: start frame loop
>>frameLoop: 312-th 
  frame name: sequences/girl/imgs/img00312.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (84, -58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (57, -21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (31, 16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (4, 53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-23, 90) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.889179
	>bestInd: 21569
	>m_bb: [origin: (159, 79) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (159, 79) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (159, 79) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2545b70
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=22
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(21)
++    ProcessNew(21)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [21, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 313-th 
  frame name: sequences/girl/imgs/img00313.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (84, -43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (57, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (31, 31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (4, 68) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-23, 105) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.00209
	>bestInd: 18586
	>m_bb: [origin: (157, 68) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (157, 68) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (157, 68) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x2536580
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [20, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=19
==============================================

=>main.cpp: start frame loop
>>frameLoop: 314-th 
  frame name: sequences/girl/imgs/img00314.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (86, -32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (60, 5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (33, 42) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (6, 79) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-21, 116) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.07659
	>bestInd: 16957
	>m_bb: [origin: (154, 62) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (154, 62) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (154, 62) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a59d40
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(19)
++    ProcessNew(19)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=19
==============================================

=>main.cpp: start frame loop
>>frameLoop: 315-th 
  frame name: sequences/girl/imgs/img00315.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (89, -26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (63, 11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (36, 48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (9, 85) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-18, 122) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.1231
	>bestInd: 15325
	>m_bb: [origin: (148, 56) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (148, 56) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (148, 56) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2b19ca0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(19)
++    ProcessNew(19)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 316-th 
  frame name: sequences/girl/imgs/img00316.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (95, -20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (69, 17) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (42, 54) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (15, 91) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-12, 128) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.12402
	>bestInd: 13961
	>m_bb: [origin: (139, 51) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (139, 51) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (139, 51) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x253cbe0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 317-th 
  frame name: sequences/girl/imgs/img00317.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (104, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (78, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (51, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (24, 96) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-3, 133) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.05184
	>bestInd: 12867
	>m_bb: [origin: (129, 47) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (129, 47) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (129, 47) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x293af30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=19
==============================================

=>main.cpp: start frame loop
>>frameLoop: 318-th 
  frame name: sequences/girl/imgs/img00318.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51489
          sample.GetRects().size() = 51489
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (114, -11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (88, 26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (61, 63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (34, 100) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (7, 137) size: (130, 211)]
	  >results.size() = 51489
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.02491
	>bestInd: 11776
	>m_bb: [origin: (122, 43) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (122, 43) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 14
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (122, 43) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 14
      sp = 0x293afa0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(19)
++    ProcessNew(19)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 319-th 
  frame name: sequences/girl/imgs/img00319.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51412
          sample.GetRects().size() = 51412
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (121, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (95, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (68, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (41, 104) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (35, 141) size: (130, 211)]
	  >results.size() = 51412
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.931665
	>bestInd: 14750
	>m_bb: [origin: (116, 54) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (116, 54) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (116, 54) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x24ac420
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [20, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=21
==============================================

=>main.cpp: start frame loop
>>frameLoop: 320-th 
  frame name: sequences/girl/imgs/img00320.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51459
          sample.GetRects().size() = 51459
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (127, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (101, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (74, 56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (47, 93) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (23, 130) size: (130, 211)]
	  >results.size() = 51459
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.833512
	>bestInd: 18268
	>m_bb: [origin: (111, 67) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (111, 67) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (111, 67) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x2534c00
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=22
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(21)
++    ProcessNew(21)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [21, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=19
==============================================

=>main.cpp: start frame loop
>>frameLoop: 321-th 
  frame name: sequences/girl/imgs/img00321.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51489
          sample.GetRects().size() = 51489
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (132, -31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (106, 6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (79, 43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (52, 80) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (25, 117) size: (130, 211)]
	  >results.size() = 51489
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.773978
	>bestInd: 18532
	>m_bb: [origin: (104, 68) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (104, 68) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (104, 68) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x293af30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=20
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(19)
++    ProcessNew(19)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [19, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=20
==============================================

=>main.cpp: start frame loop
>>frameLoop: 322-th 
  frame name: sequences/girl/imgs/img00322.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51451
          sample.GetRects().size() = 51451
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (139, -32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (113, 5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (86, 42) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (59, 79) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (39, 116) size: (130, 211)]
	  >results.size() = 51451
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.802015
	>bestInd: 18795
	>m_bb: [origin: (96, 69) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (96, 69) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (96, 69) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a6c790
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=21
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(20)
++    ProcessNew(20)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [20, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=21
==============================================

=>main.cpp: start frame loop
>>frameLoop: 323-th 
  frame name: sequences/girl/imgs/img00323.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51330
          sample.GetRects().size() = 51330
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (147, -33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (121, 4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (94, 41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (67, 78) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (124, 115) size: (130, 211)]
	  >results.size() = 51330
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.823659
	>bestInd: 19601
	>m_bb: [origin: (89, 72) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (89, 72) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (89, 72) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x1a2f4d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=22
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(21)
++    ProcessNew(21)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [21, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=21
==============================================

=>main.cpp: start frame loop
>>frameLoop: 324-th 
  frame name: sequences/girl/imgs/img00324.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51187
          sample.GetRects().size() = 51187
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (154, -36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (128, 1) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (101, 38) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (74, 75) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-10, 113) size: (130, 211)]
	  >results.size() = 51187
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.793724
	>bestInd: 20413
	>m_bb: [origin: (88, 75) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (88, 75) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (88, 75) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x1a17300
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=22
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(21)
++    ProcessNew(21)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [21, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=22
==============================================

=>main.cpp: start frame loop
>>frameLoop: 325-th 
  frame name: sequences/girl/imgs/img00325.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51211
          sample.GetRects().size() = 51211
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (155, -39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (128, -2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (102, 35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (75, 72) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-27, 110) size: (130, 211)]
	  >results.size() = 51211
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.810698
	>bestInd: 21228
	>m_bb: [origin: (90, 78) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (90, 78) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (90, 78) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x29513f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(22)
++    ProcessNew(22)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 326-th 
  frame name: sequences/girl/imgs/img00326.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51318
          sample.GetRects().size() = 51318
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (153, -42) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (126, -5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (100, 32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (73, 69) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (143, 106) size: (130, 211)]
	  >results.size() = 51318
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.89969
	>bestInd: 22587
	>m_bb: [origin: (94, 83) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (94, 83) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (94, 83) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2536580
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 327-th 
  frame name: sequences/girl/imgs/img00327.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51446
          sample.GetRects().size() = 51446
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (149, -47) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (122, -10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (96, 27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (69, 64) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (54, 101) size: (130, 211)]
	  >results.size() = 51446
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.900282
	>bestInd: 23950
	>m_bb: [origin: (102, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (102, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (102, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x254f6d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 328-th 
  frame name: sequences/girl/imgs/img00328.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (141, -52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (114, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (88, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (61, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (34, 96) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.969115
	>bestInd: 25039
	>m_bb: [origin: (107, 92) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (107, 92) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (107, 92) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x1a68f60
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 329-th 
  frame name: sequences/girl/imgs/img00329.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (136, -56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (109, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (83, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (56, 55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (29, 92) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.951807
	>bestInd: 25583
	>m_bb: [origin: (109, 94) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (109, 94) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (109, 94) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x295ffd0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 330-th 
  frame name: sequences/girl/imgs/img00330.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (134, -58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (107, -21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (81, 16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (54, 53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (27, 90) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.960238
	>bestInd: 25853
	>m_bb: [origin: (108, 95) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (108, 95) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (108, 95) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2559540
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 331-th 
  frame name: sequences/girl/imgs/img00331.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (135, -59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (108, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (82, 15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (55, 52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (28, 89) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.993017
	>bestInd: 25583
	>m_bb: [origin: (108, 94) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (108, 94) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (108, 94) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x2a3db40
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 332-th 
  frame name: sequences/girl/imgs/img00332.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (135, -58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (108, -21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (82, 16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (55, 53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (28, 90) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.992225
	>bestInd: 24771
	>m_bb: [origin: (109, 91) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (109, 91) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 20
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (109, 91) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 20
      sp = 0x295fec0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 333-th 
  frame name: sequences/girl/imgs/img00333.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (134, -55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (107, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (81, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (54, 56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (27, 93) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.00082
	>bestInd: 20987
	>m_bb: [origin: (119, 77) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (119, 77) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (119, 77) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x292ec10
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [22, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 334-th 
  frame name: sequences/girl/imgs/img00334.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (124, -41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (97, -4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (71, 33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (44, 70) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (17, 107) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.982981
	>bestInd: 19911
	>m_bb: [origin: (127, 73) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (127, 73) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (127, 73) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a60b80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 335-th 
  frame name: sequences/girl/imgs/img00335.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (116, -37) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (90, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (63, 37) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (36, 74) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (9, 111) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.945341
	>bestInd: 19920
	>m_bb: [origin: (137, 73) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (137, 73) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (137, 73) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2920c90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=23
==============================================

=>main.cpp: start frame loop
>>frameLoop: 336-th 
  frame name: sequences/girl/imgs/img00336.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (106, -37) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (80, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (53, 37) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (26, 74) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-1, 111) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.863435
	>bestInd: 19387
	>m_bb: [origin: (145, 71) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (145, 71) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (145, 71) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a60b80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=24
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(23)
++    ProcessNew(23)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [23, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 3
      The number of sps: m_sps.size()=24
==============================================

=>main.cpp: start frame loop
>>frameLoop: 337-th 
  frame name: sequences/girl/imgs/img00337.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (98, -35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (72, 2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (45, 39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (18, 76) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-9, 113) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.837466
	>bestInd: 19394
	>m_bb: [origin: (153, 71) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (153, 71) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (153, 71) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a4a310
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(24)
++    ProcessNew(24)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 338-th 
  frame name: sequences/girl/imgs/img00338.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (90, -35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (64, 2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (37, 39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (10, 76) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-17, 113) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.847086
	>bestInd: 19397
	>m_bb: [origin: (156, 71) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (156, 71) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (156, 71) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x1a75230
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 339-th 
  frame name: sequences/girl/imgs/img00339.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (87, -35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (61, 2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (34, 39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (7, 76) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-20, 113) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.805424
	>bestInd: 19399
	>m_bb: [origin: (158, 71) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (158, 71) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (158, 71) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x298b1b0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 340-th 
  frame name: sequences/girl/imgs/img00340.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (85, -35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (59, 2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (32, 39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (5, 76) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-22, 113) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.856152
	>bestInd: 18587
	>m_bb: [origin: (158, 68) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (158, 68) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (158, 68) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x295a8f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 341-th 
  frame name: sequences/girl/imgs/img00341.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (85, -32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (59, 5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (32, 42) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (5, 79) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-22, 116) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.845743
	>bestInd: 17774
	>m_bb: [origin: (158, 65) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (158, 65) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (158, 65) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2a6c7e0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 342-th 
  frame name: sequences/girl/imgs/img00342.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51487
          sample.GetRects().size() = 51487
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (85, -29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (59, 8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (32, 45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (5, 82) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-22, 119) size: (130, 211)]
	  >results.size() = 51487
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.847855
	>bestInd: 16418
	>m_bb: [origin: (157, 60) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (157, 60) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (157, 60) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a3db90
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 343-th 
  frame name: sequences/girl/imgs/img00343.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51474
          sample.GetRects().size() = 51474
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (86, -24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (60, 13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (33, 50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (6, 87) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-20, 124) size: (130, 211)]
	  >results.size() = 51474
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.860133
	>bestInd: 15873
	>m_bb: [origin: (154, 58) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (154, 58) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (154, 58) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2a3dbb0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 344-th 
  frame name: sequences/girl/imgs/img00344.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51481
          sample.GetRects().size() = 51481
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (89, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (63, 15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (36, 52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (9, 89) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-18, 126) size: (130, 211)]
	  >results.size() = 51481
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.907709
	>bestInd: 15591
	>m_bb: [origin: (143, 57) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (143, 57) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (143, 57) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x290f800
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 345-th 
  frame name: sequences/girl/imgs/img00345.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (100, -21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (74, 16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (47, 53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (20, 90) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-7, 127) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.05567
	>bestInd: 12599
	>m_bb: [origin: (132, 46) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (132, 46) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (132, 46) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x1a2f4d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 346-th 
  frame name: sequences/girl/imgs/img00346.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (111, -10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (85, 27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (58, 64) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (31, 101) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (4, 138) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.21476
	>bestInd: 11503
	>m_bb: [origin: (120, 42) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (120, 42) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 14
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (120, 42) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 14
      sp = 0x2533ad0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 347-th 
  frame name: sequences/girl/imgs/img00347.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51370
          sample.GetRects().size() = 51370
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (123, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (97, 31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (70, 68) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (43, 105) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (61, 142) size: (130, 211)]
	  >results.size() = 51370
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.37513
	>bestInd: 11491
	>m_bb: [origin: (108, 42) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (108, 42) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 14
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (108, 42) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 14
      sp = 0x1a2f4d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 348-th 
  frame name: sequences/girl/imgs/img00348.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51093
          sample.GetRects().size() = 51093
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (135, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (109, 31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (82, 68) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (55, 105) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (29, 143) size: (130, 211)]
	  >results.size() = 51093
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.48499
	>bestInd: 10933
	>m_bb: [origin: (92, 40) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (92, 40) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (92, 40) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2533ad0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 349-th 
  frame name: sequences/girl/imgs/img00349.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50311
          sample.GetRects().size() = 50311
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (151, -4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (125, 33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (98, 70) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (143, 107) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (50, 148) size: (130, 211)]
	  >results.size() = 50311
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.59919
	>bestInd: 13622
	>m_bb: [origin: (72, 50) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (72, 50) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 14
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (72, 50) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 14
      sp = 0x1a2f4d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 350-th 
  frame name: sequences/girl/imgs/img00350.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 49153
          sample.GetRects().size() = 49153
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-43, -13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-69, 24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (24, 61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (64, 100) size: (130, 211)]
	  >results.size() = 49153
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.6876
	>bestInd: 11931
	>m_bb: [origin: (63, 44) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (63, 44) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 12
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (63, 44) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 12
      sp = 0x2533ad0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 351-th 
  frame name: sequences/girl/imgs/img00351.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 47158
          sample.GetRects().size() = 47158
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-2, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (19, 32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (13, 71) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (128, 112) size: (130, 211)]
	  >results.size() = 47158
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.77484
	>bestInd: 11837
	>m_bb: [origin: (57, 45) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (57, 45) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 13
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (57, 45) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 13
      sp = 0x1a2f4d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 352-th 
  frame name: sequences/girl/imgs/img00352.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 46075
          sample.GetRects().size() = 46075
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-20, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-26, 33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-31, 73) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (150, 115) size: (130, 211)]
	  >results.size() = 46075
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.83735
	>bestInd: 11048
	>m_bb: [origin: (57, 43) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (57, 43) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 12
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (57, 43) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 12
      sp = 0x253d0f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 353-th 
  frame name: sequences/girl/imgs/img00353.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 45959
          sample.GetRects().size() = 45959
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-29, -4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-31, 35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-13, 75) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-6, 118) size: (130, 211)]
	  >results.size() = 45959
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.8162
	>bestInd: 10807
	>m_bb: [origin: (64, 42) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (64, 42) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 12
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (64, 42) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 12
      sp = 0x2533f00
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 354-th 
  frame name: sequences/girl/imgs/img00354.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 47229
          sample.GetRects().size() = 47229
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (-49, -4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-62, 34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (166, 72) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (31, 114) size: (130, 211)]
	  >results.size() = 47229
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.83209
	>bestInd: 12692
	>m_bb: [origin: (67, 48) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (67, 48) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (67, 48) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x254fc30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 355-th 
  frame name: sequences/girl/imgs/img00355.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 48140
          sample.GetRects().size() = 48140
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (129, -11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (-10, 27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (36, 65) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (103, 105) size: (130, 211)]
	  >results.size() = 48140
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.76169
	>bestInd: 14146
	>m_bb: [origin: (70, 53) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (70, 53) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (70, 53) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x292ec10
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 356-th 
  frame name: sequences/girl/imgs/img00356.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 48959
          sample.GetRects().size() = 48959
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (46, -16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (57, 21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-60, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (24, 98) size: (130, 211)]
	  >results.size() = 48959
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.80311
	>bestInd: 12650
	>m_bb: [origin: (66, 47) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (66, 47) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 13
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (66, 47) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 13
      sp = 0x254e560
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 357-th 
  frame name: sequences/girl/imgs/img00357.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 47896
          sample.GetRects().size() = 47896
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (162, -10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (62, 28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (155, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (45, 107) size: (130, 211)]
	  >results.size() = 47896
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.79962
	>bestInd: 12232
	>m_bb: [origin: (66, 46) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (66, 46) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 13
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (66, 46) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 13
      sp = 0x2a6d880
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 358-th 
  frame name: sequences/girl/imgs/img00358.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 47841
          sample.GetRects().size() = 47841
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (157, -9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (58, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (161, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (71, 108) size: (130, 211)]
	  >results.size() = 47841
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.76377
	>bestInd: 12773
	>m_bb: [origin: (70, 48) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (70, 48) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (70, 48) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x1a6c5c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 359-th 
  frame name: sequences/girl/imgs/img00359.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 48710
          sample.GetRects().size() = 48710
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (15, -11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (31, 26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (-46, 64) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (124, 103) size: (130, 211)]
	  >results.size() = 48710
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.73686
	>bestInd: 11613
	>m_bb: [origin: (78, 43) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (78, 43) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 12
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (78, 43) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 12
      sp = 0x2533fa0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 360-th 
  frame name: sequences/girl/imgs/img00360.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 49428
          sample.GetRects().size() = 49428
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (165, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (139, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (134, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (47, 106) size: (130, 211)]
	  >results.size() = 49428
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.69768
	>bestInd: 11735
	>m_bb: [origin: (82, 43) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (82, 43) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 14
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (82, 43) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 14
      sp = 0x2b0a6f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 361-th 
  frame name: sequences/girl/imgs/img00361.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 49770
          sample.GetRects().size() = 49770
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (161, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (135, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (108, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (118, 105) size: (130, 211)]
	  >results.size() = 49770
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.69799
	>bestInd: 11469
	>m_bb: [origin: (86, 42) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (86, 42) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 14
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (86, 42) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 14
      sp = 0x295ff40
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 362-th 
  frame name: sequences/girl/imgs/img00362.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50019
          sample.GetRects().size() = 50019
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (157, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (131, 31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (104, 68) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-2, 106) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (117, 147) size: (130, 211)]
	  >results.size() = 50019
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.69918
	>bestInd: 10660
	>m_bb: [origin: (90, 39) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (90, 39) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (90, 39) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x295a890
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 363-th 
  frame name: sequences/girl/imgs/img00363.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50141
          sample.GetRects().size() = 50141
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (153, -3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (127, 34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (100, 71) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-66, 109) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-8, 150) size: (130, 211)]
	  >results.size() = 50141
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.69326
	>bestInd: 10118
	>m_bb: [origin: (90, 37) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (90, 37) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (90, 37) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2a4a210
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 364-th 
  frame name: sequences/girl/imgs/img00364.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50041
          sample.GetRects().size() = 50041
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (153, -1) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (127, 36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (100, 73) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-40, 111) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (89, 152) size: (130, 211)]
	  >results.size() = 50041
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.69933
	>bestInd: 0
	>m_bb: [origin: (90, 37) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (90, 37) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (90, 37) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x253cb30
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 365-th 
  frame name: sequences/girl/imgs/img00365.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50041
          sample.GetRects().size() = 50041
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (153, -1) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (127, 36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (100, 73) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-40, 111) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (89, 152) size: (130, 211)]
	  >results.size() = 50041
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.69046
	>bestInd: 10120
	>m_bb: [origin: (93, 37) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (93, 37) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (93, 37) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x2a3bc70
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 366-th 
  frame name: sequences/girl/imgs/img00366.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50230
          sample.GetRects().size() = 50230
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (150, -1) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (124, 36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (97, 73) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (155, 110) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (125, 151) size: (130, 211)]
	  >results.size() = 50230
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.73137
	>bestInd: 12024
	>m_bb: [origin: (100, 44) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (100, 44) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 14
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (100, 44) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 14
      sp = 0x1a2f4d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 367-th 
  frame name: sequences/girl/imgs/img00367.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50868
          sample.GetRects().size() = 50868
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (143, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (117, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (90, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (63, 103) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-10, 142) size: (130, 211)]
	  >results.size() = 50868
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.71619
	>bestInd: 15819
	>m_bb: [origin: (101, 58) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (101, 58) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (101, 58) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x254f6d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 368-th 
  frame name: sequences/girl/imgs/img00368.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51265
          sample.GetRects().size() = 51265
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (142, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (116, 15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (89, 52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (62, 89) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-95, 127) size: (130, 211)]
	  >results.size() = 51265
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.72001
	>bestInd: 18529
	>m_bb: [origin: (101, 68) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (101, 68) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (101, 68) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x1a2f4d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 369-th 
  frame name: sequences/girl/imgs/img00369.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51412
          sample.GetRects().size() = 51412
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (142, -32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (116, 5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (89, 42) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (62, 79) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (63, 116) size: (130, 211)]
	  >results.size() = 51412
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.72009
	>bestInd: 19072
	>m_bb: [origin: (102, 70) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (102, 70) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (102, 70) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x254f6d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 370-th 
  frame name: sequences/girl/imgs/img00370.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51444
          sample.GetRects().size() = 51444
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (141, -34) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (115, 3) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (88, 40) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (61, 77) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (44, 114) size: (130, 211)]
	  >results.size() = 51444
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.75296
	>bestInd: 20159
	>m_bb: [origin: (105, 74) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (105, 74) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (105, 74) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x1a2f4d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 371-th 
  frame name: sequences/girl/imgs/img00371.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51487
          sample.GetRects().size() = 51487
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (138, -38) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (111, -1) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (85, 36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (58, 73) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (31, 110) size: (130, 211)]
	  >results.size() = 51487
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.72902
	>bestInd: 20975
	>m_bb: [origin: (108, 77) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (108, 77) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 18
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (108, 77) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 18
      sp = 0x254f6d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 372-th 
  frame name: sequences/girl/imgs/img00372.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (135, -41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (108, -4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (82, 33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (55, 70) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (28, 107) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.74865
	>bestInd: 21251
	>m_bb: [origin: (113, 78) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (113, 78) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (113, 78) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x1a2f4d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 373-th 
  frame name: sequences/girl/imgs/img00373.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (130, -42) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (103, -5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (77, 32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (50, 69) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (23, 106) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.74993
	>bestInd: 21800
	>m_bb: [origin: (120, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (120, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (120, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x254f6d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 374-th 
  frame name: sequences/girl/imgs/img00374.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (123, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (96, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (70, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (43, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (16, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.77175
	>bestInd: 22079
	>m_bb: [origin: (128, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (128, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (128, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x253d0f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 375-th 
  frame name: sequences/girl/imgs/img00375.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (115, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (88, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (62, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (35, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (8, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.81754
	>bestInd: 22626
	>m_bb: [origin: (133, 83) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (133, 83) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (133, 83) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x254f6d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 376-th 
  frame name: sequences/girl/imgs/img00376.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (110, -47) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (83, -10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (57, 27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (30, 64) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (3, 101) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.80255
	>bestInd: 22630
	>m_bb: [origin: (137, 83) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (137, 83) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (137, 83) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x1a2f4d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 377-th 
  frame name: sequences/girl/imgs/img00377.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (106, -47) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (79, -10) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (53, 27) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (26, 64) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-1, 101) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.8042
	>bestInd: 21553
	>m_bb: [origin: (143, 79) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (143, 79) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (143, 79) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2535510
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 378-th 
  frame name: sequences/girl/imgs/img00378.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (100, -43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (73, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (47, 31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (20, 68) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-7, 105) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.78936
	>bestInd: 20475
	>m_bb: [origin: (149, 75) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (149, 75) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (149, 75) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x254e560
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 379-th 
  frame name: sequences/girl/imgs/img00379.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (94, -39) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (67, -2) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (41, 35) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (14, 72) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-13, 109) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.77363
	>bestInd: 19937
	>m_bb: [origin: (153, 73) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (153, 73) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (153, 73) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a5e710
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 380-th 
  frame name: sequences/girl/imgs/img00380.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (90, -37) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (64, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (37, 37) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (10, 74) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-17, 111) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.71633
	>bestInd: 18047
	>m_bb: [origin: (160, 66) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (160, 66) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (160, 66) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2958960
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 381-th 
  frame name: sequences/girl/imgs/img00381.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51484
          sample.GetRects().size() = 51484
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (83, -30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (57, 7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (30, 44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (3, 81) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-24, 118) size: (130, 211)]
	  >results.size() = 51484
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.72301
	>bestInd: 16698
	>m_bb: [origin: (166, 61) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (166, 61) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (166, 61) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x290f830
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 382-th 
  frame name: sequences/girl/imgs/img00382.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51378
          sample.GetRects().size() = 51378
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (77, -25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (51, 12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (24, 49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-3, 86) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (26, 123) size: (130, 211)]
	  >results.size() = 51378
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.62614
	>bestInd: 13729
	>m_bb: [origin: (178, 50) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (178, 50) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (178, 50) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x295a8e0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 383-th 
  frame name: sequences/girl/imgs/img00383.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 50716
          sample.GetRects().size() = 50716
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (65, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (39, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (12, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-1, 97) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (88, 136) size: (130, 211)]
	  >results.size() = 50716
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.60578
	>bestInd: 9667
	>m_bb: [origin: (181, 35) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (181, 35) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 16
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (181, 35) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 16
      sp = 0x295fec0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 384-th 
  frame name: sequences/girl/imgs/img00384.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 49867
          sample.GetRects().size() = 49867
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (63, 1) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (36, 38) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (9, 75) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (-59, 113) size: (130, 211)]
	  >results.size() = 49867
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.50411
	>bestInd: 983
	>m_bb: [origin: (169, 3) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (169, 3) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (169, 3) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a6c790
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 385-th 
  frame name: sequences/girl/imgs/img00385.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 48251
          sample.GetRects().size() = 48251
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (75, 33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (48, 70) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (22, 107) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (67, 146) size: (130, 211)]
	  >results.size() = 48251
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.907522
	>bestInd: 141
	>m_bb: [origin: (140, 0) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (140, 0) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 14
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (140, 0) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 14
      sp = 0x2a6c790
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 386-th 
  frame name: sequences/girl/imgs/img00386.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 48919
          sample.GetRects().size() = 48919
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (104, 36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (77, 73) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (50, 110) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (38, 147) size: (130, 211)]
	  >results.size() = 48919
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.696258
	>bestInd: 128
	>m_bb: [origin: (127, 0) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (127, 0) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 14
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (127, 0) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 14
      sp = 0x253cae0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [27, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=28
==============================================

=>main.cpp: start frame loop
>>frameLoop: 387-th 
  frame name: sequences/girl/imgs/img00387.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 48883
          sample.GetRects().size() = 48883
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (117, 36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (90, 73) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (63, 110) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (64, 147) size: (130, 211)]
	  >results.size() = 48883
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 0.853446
	>bestInd: 125
	>m_bb: [origin: (124, 0) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (124, 0) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 14
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (124, 0) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 14
      sp = 0x2a2d110
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=29
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(28)
++    ProcessNew(28)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [28, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=28
==============================================

=>main.cpp: start frame loop
>>frameLoop: 388-th 
  frame name: sequences/girl/imgs/img00388.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 48829
          sample.GetRects().size() = 48829
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (120, 36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (93, 73) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (66, 110) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (94, 147) size: (130, 211)]
	  >results.size() = 48829
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.29756
	>bestInd: 2033
	>m_bb: [origin: (136, 7) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (136, 7) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 14
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (136, 7) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 14
      sp = 0x2951c50
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=29
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(28)
++    ProcessNew(28)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [27, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
==============================================

=>main.cpp: start frame loop
>>frameLoop: 389-th 
  frame name: sequences/girl/imgs/img00389.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 49815
          sample.GetRects().size() = 49815
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (108, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (81, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (54, 103) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (27, 140) size: (130, 211)]
	  >results.size() = 49815
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.59287
	>bestInd: 15851
	>m_bb: [origin: (133, 58) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (133, 58) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (133, 58) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a6c300
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=29
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(28)
++    ProcessNew(28)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [27, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 390-th 
  frame name: sequences/girl/imgs/img00390.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (110, -22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (84, 15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (57, 52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (30, 89) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (3, 126) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.70886
	>bestInd: 30213
	>m_bb: [origin: (132, 111) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (132, 111) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (132, 111) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a6c300
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 391-th 
  frame name: sequences/girl/imgs/img00391.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (111, -75) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (84, -38) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (57, -1) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (31, 36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (4, 73) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.7814
	>bestInd: 36447
	>m_bb: [origin: (133, 134) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (133, 134) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (133, 134) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a6c300
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 392-th 
  frame name: sequences/girl/imgs/img00392.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (110, -98) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (83, -61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (56, -24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (30, 13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (3, 50) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.83061
	>bestInd: 37803
	>m_bb: [origin: (134, 139) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (134, 139) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (134, 139) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a6c300
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 393-th 
  frame name: sequences/girl/imgs/img00393.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (109, -103) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (82, -66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (55, -29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (29, 8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (2, 45) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.87417
	>bestInd: 37534
	>m_bb: [origin: (135, 138) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (135, 138) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (135, 138) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a6c300
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 394-th 
  frame name: sequences/girl/imgs/img00394.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (108, -102) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (81, -65) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (54, -28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (28, 9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (1, 46) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.85615
	>bestInd: 36181
	>m_bb: [origin: (137, 133) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (137, 133) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (137, 133) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a6c300
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 395-th 
  frame name: sequences/girl/imgs/img00395.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (106, -97) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (79, -60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (52, -23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (26, 14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-1, 51) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.81671
	>bestInd: 32117
	>m_bb: [origin: (138, 118) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (138, 118) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (138, 118) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x1a68f60
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 396-th 
  frame name: sequences/girl/imgs/img00396.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (105, -82) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (78, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (51, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (25, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-2, 66) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.80839
	>bestInd: 29681
	>m_bb: [origin: (141, 109) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (141, 109) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (141, 109) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2535510
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 397-th 
  frame name: sequences/girl/imgs/img00397.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (102, -73) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (75, -36) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (49, 1) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (22, 38) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-5, 75) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.80682
	>bestInd: 25073
	>m_bb: [origin: (140, 92) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (140, 92) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (140, 92) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2c64ab0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 398-th 
  frame name: sequences/girl/imgs/img00398.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (103, -56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (76, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (50, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (23, 55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-4, 92) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.79307
	>bestInd: 22904
	>m_bb: [origin: (139, 84) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (139, 84) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (139, 84) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2938720
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 399-th 
  frame name: sequences/girl/imgs/img00399.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (104, -48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (77, -11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (51, 26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (24, 63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-3, 100) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.7927
	>bestInd: 22088
	>m_bb: [origin: (136, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (136, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (136, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2537ac0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 400-th 
  frame name: sequences/girl/imgs/img00400.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (107, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (80, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (54, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (27, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (0, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.82075
	>bestInd: 22084
	>m_bb: [origin: (132, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (132, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (132, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3dbb0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 401-th 
  frame name: sequences/girl/imgs/img00401.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (111, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (84, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (58, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (31, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (4, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.83994
	>bestInd: 22080
	>m_bb: [origin: (128, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (128, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (128, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x25379d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 402-th 
  frame name: sequences/girl/imgs/img00402.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (115, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (88, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (62, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (35, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (8, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.87208
	>bestInd: 22349
	>m_bb: [origin: (127, 82) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (127, 82) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (127, 82) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a4a210
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 403-th 
  frame name: sequences/girl/imgs/img00403.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (116, -46) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (89, -9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (63, 28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (36, 65) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (9, 102) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.8565
	>bestInd: 22892
	>m_bb: [origin: (128, 84) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (128, 84) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (128, 84) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2537a10
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 404-th 
  frame name: sequences/girl/imgs/img00404.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (115, -48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (88, -11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (62, 26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (35, 63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (8, 100) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.85563
	>bestInd: 23162
	>m_bb: [origin: (127, 85) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (127, 85) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (127, 85) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x298c700
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 405-th 
  frame name: sequences/girl/imgs/img00405.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (116, -49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (89, -12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (63, 25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (36, 62) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (9, 99) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.87864
	>bestInd: 23702
	>m_bb: [origin: (125, 87) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (125, 87) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (125, 87) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3bc20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 406-th 
  frame name: sequences/girl/imgs/img00406.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (118, -51) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (91, -14) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (65, 23) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (38, 60) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (11, 97) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.88013
	>bestInd: 24245
	>m_bb: [origin: (126, 89) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (126, 89) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (126, 89) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x298c720
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 407-th 
  frame name: sequences/girl/imgs/img00407.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (117, -53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (90, -16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (64, 21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (37, 58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (10, 95) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.88225
	>bestInd: 24245
	>m_bb: [origin: (125, 89) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (125, 89) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (125, 89) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x298c6b0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 408-th 
  frame name: sequences/girl/imgs/img00408.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (118, -53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (91, -16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (65, 21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (38, 58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (11, 95) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.88098
	>bestInd: 24245
	>m_bb: [origin: (126, 89) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (126, 89) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (126, 89) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a59c70
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 409-th 
  frame name: sequences/girl/imgs/img00409.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (117, -53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (90, -16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (64, 21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (37, 58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (10, 95) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.87416
	>bestInd: 0
	>m_bb: [origin: (126, 89) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (126, 89) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (126, 89) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x253d0f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 410-th 
  frame name: sequences/girl/imgs/img00410.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (117, -53) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (90, -16) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (64, 21) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (37, 58) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (10, 95) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.88221
	>bestInd: 24786
	>m_bb: [origin: (125, 91) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (125, 91) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (125, 91) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2951c50
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 411-th 
  frame name: sequences/girl/imgs/img00411.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (118, -55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (91, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (65, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (38, 56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (11, 93) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.8674
	>bestInd: 24786
	>m_bb: [origin: (124, 91) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (124, 91) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (124, 91) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a4a2a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 412-th 
  frame name: sequences/girl/imgs/img00412.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (119, -55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (92, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (66, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (39, 56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (12, 93) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.87956
	>bestInd: 25055
	>m_bb: [origin: (123, 92) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (123, 92) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (123, 92) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2951c50
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 413-th 
  frame name: sequences/girl/imgs/img00413.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (120, -56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (93, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (67, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (40, 55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (13, 92) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.86291
	>bestInd: 25055
	>m_bb: [origin: (122, 92) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (122, 92) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (122, 92) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a4a2a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 414-th 
  frame name: sequences/girl/imgs/img00414.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (121, -56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (94, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (68, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (41, 55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (14, 92) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.85893
	>bestInd: 25054
	>m_bb: [origin: (121, 92) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (121, 92) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (121, 92) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2951c50
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 415-th 
  frame name: sequences/girl/imgs/img00415.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (122, -56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (95, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (69, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (42, 55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (15, 92) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.87101
	>bestInd: 0
	>m_bb: [origin: (121, 92) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (121, 92) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (121, 92) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a4a2a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 416-th 
  frame name: sequences/girl/imgs/img00416.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (122, -56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (95, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (69, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (42, 55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (15, 92) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.87129
	>bestInd: 25053
	>m_bb: [origin: (120, 92) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (120, 92) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (120, 92) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2951c50
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 417-th 
  frame name: sequences/girl/imgs/img00417.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (123, -56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (96, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (70, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (43, 55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (16, 92) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.8638
	>bestInd: 25323
	>m_bb: [origin: (120, 93) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (120, 93) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (120, 93) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x1a68f60
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 418-th 
  frame name: sequences/girl/imgs/img00418.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (123, -57) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (96, -20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (70, 17) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (43, 54) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (16, 91) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.85998
	>bestInd: 0
	>m_bb: [origin: (120, 93) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (120, 93) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (120, 93) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x254e560
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 419-th 
  frame name: sequences/girl/imgs/img00419.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (123, -57) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (96, -20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (70, 17) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (43, 54) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (16, 91) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.88
	>bestInd: 25053
	>m_bb: [origin: (120, 92) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (120, 92) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (120, 92) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2536580
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 420-th 
  frame name: sequences/girl/imgs/img00420.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (123, -56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (96, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (70, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (43, 55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (16, 92) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.79794
	>bestInd: 24782
	>m_bb: [origin: (120, 91) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (120, 91) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (120, 91) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2c64ab0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 421-th 
  frame name: sequences/girl/imgs/img00421.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (123, -55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (96, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (70, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (43, 56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (16, 93) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.64444
	>bestInd: 24783
	>m_bb: [origin: (122, 91) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (122, 91) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (122, 91) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a6c7e0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 422-th 
  frame name: sequences/girl/imgs/img00422.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (121, -55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (94, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (68, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (41, 56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (14, 93) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.46807
	>bestInd: 25054
	>m_bb: [origin: (122, 92) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (122, 92) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 19
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (122, 92) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 19
      sp = 0x2a6c800
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 423-th 
  frame name: sequences/girl/imgs/img00423.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (121, -56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (94, -19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (68, 18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (41, 55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (14, 92) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.39865
	>bestInd: 24786
	>m_bb: [origin: (124, 91) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (124, 91) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (124, 91) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x293b8d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
==============================================

=>main.cpp: start frame loop
>>frameLoop: 424-th 
  frame name: sequences/girl/imgs/img00424.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (119, -55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (92, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (66, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (39, 56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (12, 93) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.322
	>bestInd: 0
	>m_bb: [origin: (124, 91) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (124, 91) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (124, 91) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2553b00
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=28
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(27)
++    ProcessNew(27)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [27, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=28
==============================================

=>main.cpp: start frame loop
>>frameLoop: 425-th 
  frame name: sequences/girl/imgs/img00425.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (119, -55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (92, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (66, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (39, 56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (12, 93) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.31269
	>bestInd: 24786
	>m_bb: [origin: (125, 91) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (125, 91) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (125, 91) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a73180
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=29
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(28)
++    ProcessNew(28)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [28, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 426-th 
  frame name: sequences/girl/imgs/img00426.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (118, -55) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (91, -18) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (65, 19) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (38, 56) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (11, 93) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.34192
	>bestInd: 24517
	>m_bb: [origin: (126, 90) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (126, 90) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (126, 90) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3dab0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 427-th 
  frame name: sequences/girl/imgs/img00427.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (117, -54) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (90, -17) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (64, 20) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (37, 57) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (10, 94) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.42075
	>bestInd: 23976
	>m_bb: [origin: (127, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (127, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (127, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3bd10
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 428-th 
  frame name: sequences/girl/imgs/img00428.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (116, -52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (89, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (63, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (36, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (9, 96) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.46163
	>bestInd: 23977
	>m_bb: [origin: (129, 88) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (129, 88) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (129, 88) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3d080
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 429-th 
  frame name: sequences/girl/imgs/img00429.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (114, -52) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (87, -15) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (61, 22) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (34, 59) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (7, 96) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.47182
	>bestInd: 23437
	>m_bb: [origin: (130, 86) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (130, 86) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (130, 86) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x295a8c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 430-th 
  frame name: sequences/girl/imgs/img00430.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (113, -50) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (86, -13) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (60, 24) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (33, 61) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (6, 98) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.39141
	>bestInd: 23167
	>m_bb: [origin: (131, 85) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (131, 85) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (131, 85) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a4f360
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 431-th 
  frame name: sequences/girl/imgs/img00431.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (112, -49) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (85, -12) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (59, 25) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (32, 62) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (5, 99) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.34658
	>bestInd: 22896
	>m_bb: [origin: (131, 84) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (131, 84) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (131, 84) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a4f360
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 432-th 
  frame name: sequences/girl/imgs/img00432.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (112, -48) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (85, -11) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (59, 26) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (32, 63) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (5, 100) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.36855
	>bestInd: 22353
	>m_bb: [origin: (130, 82) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (130, 82) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (130, 82) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x254e560
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 433-th 
  frame name: sequences/girl/imgs/img00433.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (113, -46) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (86, -9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (60, 28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (33, 65) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (6, 102) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.28334
	>bestInd: 22354
	>m_bb: [origin: (132, 82) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (132, 82) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (132, 82) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3a370
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 434-th 
  frame name: sequences/girl/imgs/img00434.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (111, -46) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (84, -9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (58, 28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (31, 65) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (4, 102) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.31563
	>bestInd: 22081
	>m_bb: [origin: (129, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (129, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (129, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3a370
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [26, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 2
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 435-th 
  frame name: sequences/girl/imgs/img00435.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (114, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (87, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (61, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (34, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (7, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.44112
	>bestInd: 22079
	>m_bb: [origin: (127, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (127, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (127, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a4f360
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
==============================================

=>main.cpp: start frame loop
>>frameLoop: 436-th 
  frame name: sequences/girl/imgs/img00436.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (116, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (89, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (63, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (36, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (9, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.42956
	>bestInd: 21809
	>m_bb: [origin: (128, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (128, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (128, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2b02d80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=27
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(26)
++    ProcessNew(26)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [25, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 437-th 
  frame name: sequences/girl/imgs/img00437.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (115, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (88, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (62, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (35, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (8, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.36209
	>bestInd: 21535
	>m_bb: [origin: (125, 79) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (125, 79) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (125, 79) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2b02d80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 438-th 
  frame name: sequences/girl/imgs/img00438.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (118, -43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (91, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (65, 31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (38, 68) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (11, 105) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.31033
	>bestInd: 21264
	>m_bb: [origin: (125, 78) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (125, 78) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (125, 78) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2b02d80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 439-th 
  frame name: sequences/girl/imgs/img00439.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (118, -42) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (91, -5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (65, 32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (38, 69) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (11, 106) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.49145
	>bestInd: 20994
	>m_bb: [origin: (126, 77) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (126, 77) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (126, 77) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x1a68f60
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 440-th 
  frame name: sequences/girl/imgs/img00440.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (117, -41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (90, -4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (64, 33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (37, 70) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (10, 107) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.7165
	>bestInd: 21264
	>m_bb: [origin: (126, 78) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (126, 78) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (126, 78) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2559540
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 441-th 
  frame name: sequences/girl/imgs/img00441.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (117, -42) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (90, -5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (64, 32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (37, 69) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (10, 106) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.86463
	>bestInd: 21806
	>m_bb: [origin: (126, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (126, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (126, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a84670
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 442-th 
  frame name: sequences/girl/imgs/img00442.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (117, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (90, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (64, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (37, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (10, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.89401
	>bestInd: 0
	>m_bb: [origin: (126, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (126, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (126, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2c64ab0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 443-th 
  frame name: sequences/girl/imgs/img00443.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (117, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (90, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (64, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (37, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (10, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.88722
	>bestInd: 22077
	>m_bb: [origin: (126, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (126, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (126, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x24abf10
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 444-th 
  frame name: sequences/girl/imgs/img00444.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (117, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (90, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (64, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (37, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (10, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.84227
	>bestInd: 21807
	>m_bb: [origin: (126, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (126, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (126, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x24abf10
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 445-th 
  frame name: sequences/girl/imgs/img00445.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (117, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (90, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (64, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (37, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (10, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.85364
	>bestInd: 21806
	>m_bb: [origin: (125, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (125, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (125, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x25596a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 446-th 
  frame name: sequences/girl/imgs/img00446.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (118, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (91, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (65, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (38, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (11, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.84394
	>bestInd: 21805
	>m_bb: [origin: (124, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (124, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (124, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x25596a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 447-th 
  frame name: sequences/girl/imgs/img00447.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (119, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (92, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (66, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (39, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (12, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.81643
	>bestInd: 22074
	>m_bb: [origin: (123, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (123, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (123, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3bcb0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 448-th 
  frame name: sequences/girl/imgs/img00448.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (120, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (93, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (67, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (40, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (13, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.83403
	>bestInd: 21805
	>m_bb: [origin: (124, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (124, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (124, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a59ce0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 449-th 
  frame name: sequences/girl/imgs/img00449.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (119, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (92, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (66, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (39, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (12, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.83395
	>bestInd: 0
	>m_bb: [origin: (124, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (124, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (124, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a59ce0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 450-th 
  frame name: sequences/girl/imgs/img00450.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (119, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (92, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (66, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (39, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (12, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.82683
	>bestInd: 21805
	>m_bb: [origin: (125, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (125, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (125, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3dbd0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 451-th 
  frame name: sequences/girl/imgs/img00451.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (118, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (91, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (65, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (38, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (11, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.81492
	>bestInd: 0
	>m_bb: [origin: (125, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (125, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (125, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a492d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 452-th 
  frame name: sequences/girl/imgs/img00452.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (118, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (91, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (65, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (38, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (11, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.85163
	>bestInd: 21806
	>m_bb: [origin: (126, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (126, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (126, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x25596e0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 453-th 
  frame name: sequences/girl/imgs/img00453.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (117, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (90, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (64, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (37, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (10, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.89489
	>bestInd: 21808
	>m_bb: [origin: (128, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (128, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (128, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2533f00
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 454-th 
  frame name: sequences/girl/imgs/img00454.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (115, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (88, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (62, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (35, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (8, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.84509
	>bestInd: 21539
	>m_bb: [origin: (129, 79) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (129, 79) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (129, 79) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a60b80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 455-th 
  frame name: sequences/girl/imgs/img00455.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (114, -43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (87, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (61, 31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (34, 68) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (7, 105) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.62502
	>bestInd: 20998
	>m_bb: [origin: (130, 77) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (130, 77) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (130, 77) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2951c50
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 456-th 
  frame name: sequences/girl/imgs/img00456.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (113, -41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (86, -4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (60, 33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (33, 70) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (6, 107) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.4159
	>bestInd: 20999
	>m_bb: [origin: (132, 77) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (132, 77) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (132, 77) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a60b80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 457-th 
  frame name: sequences/girl/imgs/img00457.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (111, -41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (84, -4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (58, 33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (31, 70) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (4, 107) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.43681
	>bestInd: 21273
	>m_bb: [origin: (135, 78) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (135, 78) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (135, 78) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2533f00
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 458-th 
  frame name: sequences/girl/imgs/img00458.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (108, -42) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (81, -5) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (55, 32) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (28, 69) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (1, 106) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.50971
	>bestInd: 21006
	>m_bb: [origin: (138, 77) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (138, 77) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 15
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (138, 77) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 15
      sp = 0x2a492d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 459-th 
  frame name: sequences/girl/imgs/img00459.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (105, -41) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (78, -4) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (52, 33) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (25, 70) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-2, 107) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.45166
	>bestInd: 22087
	>m_bb: [origin: (136, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (136, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (136, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x1a6ba60
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 460-th 
  frame name: sequences/girl/imgs/img00460.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (107, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (80, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (54, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (27, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (0, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.53164
	>bestInd: 22362
	>m_bb: [origin: (140, 82) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (140, 82) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (140, 82) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2536580
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 461-th 
  frame name: sequences/girl/imgs/img00461.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (103, -46) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (76, -9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (50, 28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (23, 65) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-4, 102) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.56884
	>bestInd: 21821
	>m_bb: [origin: (140, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (140, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (140, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x1a68f60
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 462-th 
  frame name: sequences/girl/imgs/img00462.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (103, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (76, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (50, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (23, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-4, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.5699
	>bestInd: 21820
	>m_bb: [origin: (139, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (139, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (139, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x253cbd0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 463-th 
  frame name: sequences/girl/imgs/img00463.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (104, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (77, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (51, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (24, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-3, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.53267
	>bestInd: 0
	>m_bb: [origin: (139, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (139, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (139, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a5e6f0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 464-th 
  frame name: sequences/girl/imgs/img00464.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (104, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (77, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (51, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (24, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-3, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.54523
	>bestInd: 22093
	>m_bb: [origin: (142, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (142, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (142, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a84670
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 465-th 
  frame name: sequences/girl/imgs/img00465.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (101, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (74, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (48, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (21, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-6, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.60055
	>bestInd: 22093
	>m_bb: [origin: (141, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (141, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (141, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3db00
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 466-th 
  frame name: sequences/girl/imgs/img00466.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (102, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (75, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (49, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (22, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-5, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.64828
	>bestInd: 22094
	>m_bb: [origin: (143, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (143, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (143, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2c64b20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 467-th 
  frame name: sequences/girl/imgs/img00467.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (100, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (73, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (47, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (20, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-7, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.78345
	>bestInd: 21824
	>m_bb: [origin: (143, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (143, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (143, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x254f720
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 468-th 
  frame name: sequences/girl/imgs/img00468.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (100, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (73, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (47, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (20, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-7, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.72869
	>bestInd: 22365
	>m_bb: [origin: (143, 82) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (143, 82) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (143, 82) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x254f6d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 469-th 
  frame name: sequences/girl/imgs/img00469.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (100, -46) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (73, -9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (47, 28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (20, 65) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-7, 102) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.79651
	>bestInd: 22094
	>m_bb: [origin: (142, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (142, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (142, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a3bc20
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 470-th 
  frame name: sequences/girl/imgs/img00470.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (101, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (74, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (48, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (21, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-6, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.83367
	>bestInd: 22091
	>m_bb: [origin: (139, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (139, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (139, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x254f720
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 471-th 
  frame name: sequences/girl/imgs/img00471.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (104, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (77, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (51, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (24, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-3, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.82413
	>bestInd: 0
	>m_bb: [origin: (139, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (139, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (139, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x25596a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 472-th 
  frame name: sequences/girl/imgs/img00472.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (104, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (77, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (51, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (24, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-3, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.87136
	>bestInd: 22363
	>m_bb: [origin: (141, 82) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (141, 82) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (141, 82) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x254f720
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 473-th 
  frame name: sequences/girl/imgs/img00473.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (102, -46) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (75, -9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (49, 28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (22, 65) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-5, 102) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.86336
	>bestInd: 0
	>m_bb: [origin: (141, 82) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (141, 82) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (141, 82) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a4f360
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 474-th 
  frame name: sequences/girl/imgs/img00474.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (102, -46) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (75, -9) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (49, 28) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (22, 65) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-5, 102) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.82089
	>bestInd: 22094
	>m_bb: [origin: (142, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (142, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (142, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a4f360
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 475-th 
  frame name: sequences/girl/imgs/img00475.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (101, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (74, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (48, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (21, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-6, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.81235
	>bestInd: 0
	>m_bb: [origin: (142, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (142, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (142, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a4f360
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 476-th 
  frame name: sequences/girl/imgs/img00476.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (101, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (74, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (48, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (21, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-6, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.80832
	>bestInd: 0
	>m_bb: [origin: (142, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (142, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (142, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a4f360
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 477-th 
  frame name: sequences/girl/imgs/img00477.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (101, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (74, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (48, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (21, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-6, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.79848
	>bestInd: 21822
	>m_bb: [origin: (141, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (141, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (141, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a4f360
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 478-th 
  frame name: sequences/girl/imgs/img00478.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (102, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (75, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (49, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (22, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-5, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.79669
	>bestInd: 21822
	>m_bb: [origin: (142, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (142, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (142, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a4f360
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 479-th 
  frame name: sequences/girl/imgs/img00479.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (101, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (74, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (48, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (21, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-6, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.78253
	>bestInd: 21822
	>m_bb: [origin: (141, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (141, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (141, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a4f360
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 480-th 
  frame name: sequences/girl/imgs/img00480.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (102, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (75, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (49, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (22, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-5, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.77963
	>bestInd: 21821
	>m_bb: [origin: (140, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (140, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (140, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a4f360
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 481-th 
  frame name: sequences/girl/imgs/img00481.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (103, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (76, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (50, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (23, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-4, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.74221
	>bestInd: 22089
	>m_bb: [origin: (138, 81) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (138, 81) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (138, 81) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2b02d80
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 482-th 
  frame name: sequences/girl/imgs/img00482.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (105, -45) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (78, -8) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (52, 29) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (25, 66) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-2, 103) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.75842
	>bestInd: 21820
	>m_bb: [origin: (139, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (139, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (139, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2536580
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 483-th 
  frame name: sequences/girl/imgs/img00483.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (104, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (77, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (51, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (24, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-3, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.75996
	>bestInd: 21819
	>m_bb: [origin: (138, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (138, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (138, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2536580
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 484-th 
  frame name: sequences/girl/imgs/img00484.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (105, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (78, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (52, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (25, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-2, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.76795
	>bestInd: 21818
	>m_bb: [origin: (137, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (137, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (137, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a32620
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 485-th 
  frame name: sequences/girl/imgs/img00485.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (106, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (79, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (53, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (26, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-1, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.76424
	>bestInd: 0
	>m_bb: [origin: (137, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (137, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (137, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a84670
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 486-th 
  frame name: sequences/girl/imgs/img00486.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (106, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (79, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (53, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (26, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-1, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.76953
	>bestInd: 21817
	>m_bb: [origin: (136, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (136, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (136, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x29588b0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 487-th 
  frame name: sequences/girl/imgs/img00487.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (107, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (80, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (54, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (27, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (0, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.74524
	>bestInd: 0
	>m_bb: [origin: (136, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (136, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (136, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x29588c0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 488-th 
  frame name: sequences/girl/imgs/img00488.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (107, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (80, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (54, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (27, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (0, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.74467
	>bestInd: 0
	>m_bb: [origin: (136, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (136, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (136, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2c64b00
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 489-th 
  frame name: sequences/girl/imgs/img00489.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (107, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (80, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (54, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (27, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (0, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.74601
	>bestInd: 0
	>m_bb: [origin: (136, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (136, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (136, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2961ff0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 490-th 
  frame name: sequences/girl/imgs/img00490.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (107, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (80, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (54, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (27, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (0, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.7422
	>bestInd: 0
	>m_bb: [origin: (136, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (136, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (136, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a325b0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 491-th 
  frame name: sequences/girl/imgs/img00491.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (107, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (80, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (54, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (27, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (0, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.76469
	>bestInd: 0
	>m_bb: [origin: (136, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (136, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (136, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x25596a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 492-th 
  frame name: sequences/girl/imgs/img00492.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (107, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (80, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (54, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (27, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (0, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.74858
	>bestInd: 0
	>m_bb: [origin: (136, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (136, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (136, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x25596a0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 493-th 
  frame name: sequences/girl/imgs/img00493.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (107, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (80, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (54, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (27, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (0, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.70062
	>bestInd: 21818
	>m_bb: [origin: (138, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (138, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (138, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x254f760
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 494-th 
  frame name: sequences/girl/imgs/img00494.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (105, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (78, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (52, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (25, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-2, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.7306
	>bestInd: 21546
	>m_bb: [origin: (136, 79) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (136, 79) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (136, 79) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2533f00
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 495-th 
  frame name: sequences/girl/imgs/img00495.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (107, -43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (80, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (54, 31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (27, 68) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (0, 105) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.71793
	>bestInd: 21549
	>m_bb: [origin: (140, 79) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (140, 79) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (140, 79) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x254f760
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 496-th 
  frame name: sequences/girl/imgs/img00496.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (103, -43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (76, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (50, 31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (23, 68) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-4, 105) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.70637
	>bestInd: 21551
	>m_bb: [origin: (142, 79) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (142, 79) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (142, 79) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a492d0
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 497-th 
  frame name: sequences/girl/imgs/img00497.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (101, -43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (74, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (48, 31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (21, 68) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-6, 105) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.72284
	>bestInd: 0
	>m_bb: [origin: (142, 79) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (142, 79) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (142, 79) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2b0a730
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 498-th 
  frame name: sequences/girl/imgs/img00498.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (101, -43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (74, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (48, 31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (21, 68) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-6, 105) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.72298
	>bestInd: 0
	>m_bb: [origin: (142, 79) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (142, 79) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (142, 79) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2533f00
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 499-th 
  frame name: sequences/girl/imgs/img00499.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (101, -43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (74, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (48, 31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (21, 68) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-6, 105) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.70865
	>bestInd: 21552
	>m_bb: [origin: (143, 79) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (143, 79) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (143, 79) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x254f760
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 500-th 
  frame name: sequences/girl/imgs/img00500.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (100, -43) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (73, -6) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (47, 31) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (20, 68) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-7, 105) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.75448
	>bestInd: 21824
	>m_bb: [origin: (144, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (144, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (144, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a4f360
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================

=>main.cpp: start frame loop
>>frameLoop: 501-th 
  frame name: sequences/girl/imgs/img00501.png
  origImage size: [320 x 240]
  frame size: [400 x 400]
@@@Gate of tracking for each frame: main->tracker.Track(frame) ..
===========================Gate of Eval(sample, scroes)
      @Eval()
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        LaRank::Eval(sample, results) 
          fvs.size() = 51490
          sample.GetRects().size() = 51490
	  ===============Gate of compute score: 
	  >fvs[0].size(): 192
	  >y: [origin: (0, 0) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[10000].size(): 192
	  >y: [origin: (99, -44) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[20000].size(): 192
	  >y: [origin: (72, -7) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[30000].size(): 192
	  >y: [origin: (46, 30) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[40000].size(): 192
	  >y: [origin: (19, 67) size: (130, 211)]
	  ===============Gate of compute score: 
	  >fvs[50000].size(): 192
	  >y: [origin: (-8, 104) size: (130, 211)]
	  >results.size() = 51490
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
===========================Got the predict box
	>bestScore: 1.75448
	>bestInd: 0
	>m_bb: [origin: (144, 80) size: (130, 211)]
	>UpdateLearner(image) after got the 'm_bb'.
  @Tracker::UpdateLearner ..
    Sampler::RadialSamples(m_bb, 2*m_config.searchRadius, 5, 16) -> rects
    centre sample: rects[0] = [origin: (144, 80) size: (130, 211)]
    number of rects: rects.size() = 81
    number of keptRects: keptRects.size() = 17
    @MultiSameple sample(image, keptRects) ..
    @m_pLearner->Update(smaple, 0) ..
  @LaRank::Update(const MultiSample& smaple, int y)
    ->Get the center sample: [origin: (144, 80) size: (130, 211)]
    ->Get the 'rect - center' and put them into 'sp' .. 
    ->Number of rects: rects.size() = 17
      sp = 0x2a4f360
      SupportPattern* sp; sp->x; sp->yv; sp->images; sp->refCount.
    @const_cast<Features&>(m_features).Eval(sample, sp->x) :fea->sp.x
      SupportPattern* sp; sp->x: the (haar) feature of each rect.
      SupportPattern* sp; sp->y: the index of each rect.
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=26
*****************************************************************************
** This is the gate of 'screening'. Inputs: sp. 			   **
*****************************************************************************
+  ProcessNew(25)
++    ProcessNew(25)
        >> SMOStep(ip, in) ....
#  LaRank::Budgetmaintenance() -> [24, 100]
*  10 'ReProcess() + Budgetmaintenance()'..
     >> 1 Reprocess = 1 ProcessOld() + 10 Optimize()
      The number of svs of this sp: sp->refCount = 0
      The number of sps: m_sps.size()=25
==============================================
